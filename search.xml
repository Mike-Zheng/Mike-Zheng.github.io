<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>[作品]五十音の学習 五十音練習小工具</title>
      <link href="/posts/gojuonap/"/>
      <url>/posts/gojuonap/</url>
      
        <content type="html"><![CDATA[<h1>五十音の学習 五十音練習小工具</h1><p>在之前開發的小工具:<a href="https://mike-zheng.github.io/posts/gojuon50/">[作品]日文 羅馬拼音五十音練習器</a>中，<br>原本是自己玩玩與練習五十音的需求為主，後來分享給朋友後的到不錯的反饋。</p><p>經過設計師友人的重新介面定義與設計，將原本素面的畫面搖身成遊戲性質的練習器。</p><p><img src="sketch.png" alt="sketch screen"></p><h2 id="將介面遊戲化並增強支援手機">將介面遊戲化並增強支援手機</h2><p>主要是以小遊戲性質的方式不僅可以提高學習的意願，<br>需求就是介面簡單乾淨，容易使用的羅馬拼音50音練習。</p><p><a href="https://mike-zheng.github.io/gojuon/">https://mike-zheng.github.io/gojuon/</a></p><p>需求</p><ul><li>遊戲性新介面</li><li>鍵盤練習為主輸入羅馬英文</li><li>隨機出題</li><li>正確失敗提示</li><li>正確會自動跳題(auto focus)</li><li>失敗提示後可以透過backspace/del重新輸入</li><li>忘記了可以按空白鍵投降</li><li>加入平假名片假名</li><li>字元支援增強</li></ul><p><img src="app_all.png" alt="手機板畫面"></p><h2 id="安裝步驟">安裝步驟</h2><ul><li>打開手機瀏覽器(iphone 請用safari) 前往 <a href="https://mike-zheng.github.io/gojuon/">https://mike-zheng.github.io/gojuon/</a></li><li>點擊選項找到&quot;加到主畫面&quot;並點擊安裝</li></ul><h2 id="關鍵字">關鍵字</h2><p>敘述</p><ul><li>五十音練習小工具</li><li>Learning tools for Japanese syllabary</li><li>五十音の学習ツール</li><li>일본어 음절 학습 도구</li></ul><p>關鍵字</p><ul><li>羅馬拼音</li><li>五十音練習器</li><li>Japanese</li><li>syllabary</li><li>gojuon</li><li>hiragana</li><li>katakana</li><li>五十音</li><li>히라가나</li><li>가타카나</li><li>五十音</li><li>ひらがな</li><li>カタカナ</li><li>五十音</li><li>平假名</li><li>片假名</li></ul><p>最後再附上連結讓大家玩玩看</p><p><a href="https://mike-zheng.github.io/gojuon/">https://mike-zheng.github.io/gojuon/</a></p>]]></content>
      
      
      <categories>
          
          <category> 作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue 筆記 </tag>
            
            <tag> pwa 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[作品]日文 羅馬拼音五十音練習器</title>
      <link href="/posts/gojuon50/"/>
      <url>/posts/gojuon50/</url>
      
        <content type="html"><![CDATA[<h1>日文 羅馬拼音五十音練習器</h1><p>說來慚愧，最近有機會認識日本人朋友，卻發現自己日文不太好無法溝通只好從50音重新練習開始。<br>主要需求就是介面簡單乾淨，容易使用的羅馬拼音50音練習</p><p><img src="screen.png" alt="screenshot"></p><p><a href="https://mike-zheng.github.io/gojuon-exam/">https://mike-zheng.github.io/gojuon-exam/</a></p><p>關鍵字</p><ul><li>羅馬拼音</li><li>五十音練習器</li></ul><h2 id="需求">需求</h2><p>先從需求開始定義</p><ul><li>介面簡潔</li><li>鍵盤練習為主輸入羅馬英文</li><li>隨機出題</li><li>正確失敗提示</li><li>正確會自動跳題(auto focus)</li><li>失敗提示後可以透過backspace/del重新輸入</li><li>忘記了可以按空白鍵投降</li><li>加入平假名片假名</li><li>不要激發我的得失心，讓我好好練習</li></ul><p>這邊尤其是最後一點最重要xD。</p><p>希望輕鬆為主，每天打卡準備上班前都可以練習100題。</p><p>其實就跟以前刷題練習一樣，<br>每次得失心一來，就會想要每次都完整成功，</p><p>後來都會變成包袱，降低自己的學習欲望。</p><p>附上連結與程式碼讓大家玩玩看</p><p><a href="https://mike-zheng.github.io/gojuon-exam/">https://mike-zheng.github.io/gojuon-exam/</a></p>]]></content>
      
      
      <categories>
          
          <category> 作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[作品]Nookstamp 傢俱搜集器</title>
      <link href="/posts/nookstmp/"/>
      <url>/posts/nookstmp/</url>
      
        <content type="html"><![CDATA[<h1>Nookstamp 傢俱搜集器</h1><blockquote><p>“Nookstamp 傢俱搜集器” 2020 螺絲起子工作室出品。</p></blockquote><p><a href="https://nookstamp.com" target="_blank" rel="noopener">https://nookstamp.com</a></p><p>NookStamp is a web application written in React for ACNH. The main features of this application are to help you collect orderable furnitures, share collections with friends.</p><p>開發的初衷在於遊戲，苦手如我晚了其他人好一陣子才開始動物森友會的無人島生活。</p><p>玩了半個多月的撿樹枝撿石頭，僅能靠乾媽乾爹贊助我道具，<br>蒐集魂爆發又苦無有效方法。</p><p>心想一定有更方便記錄道具的方法阿~</p><p>直至某天天靈蓋一道念頭直衝腦門，<br>於是於平常假日會議工作團偶然提起，臨時起意開發了一週，<br>經過小夥夥伴們跨越時區日以繼夜的趕工。&quot;Nookstamp 傢俱搜集器&quot;成了我們工作室的第一個作品。</p><h2 id="銘謝">銘謝</h2><p>感謝螺絲起子工作室小夥伴分跨三國的共同開發</p><ul><li>Lee Chen</li><li>S.Y. Wang</li><li>mengchie</li></ul><h2 id="Data-source">Data source</h2><p>We utilize the data from <a href="http://nookplaza.net" target="_blank" rel="noopener">nookplaza.net</a>. The following is the endpoint to collect the furniture data.</p><blockquote><p><a href="https://api.nookplaza.net/items?category=Furniture" target="_blank" rel="noopener">https://api.nookplaza.net/items?category=Furniture</a></p></blockquote><h2 id="開發歷程">開發歷程</h2><ul><li><p>2020/05/15 以vue為基底開發 基本版收集器</p></li><li><p>2020/05/18 解決分享碼問題</p><ul><li>將大量boolean資料用簡短string標示</li><li>參考 <a href="https://stackoverflow.com/questions/38071235/compressing-a-string-of-0s-and-1s-in-js" target="_blank" rel="noopener">compressing-a-string-of-0s-and-1s-in-js</a></li></ul></li><li><p>2020/05/22 加入ga 加入opengraph 加入facebook群眾分析</p></li><li><p>2020/05/23 上線 <a href="https://nookstamp.com" target="_blank" rel="noopener">https://nookstamp.com</a></p></li><li><p>2020/05/23 初期使用者訪談</p><p><em>佛系玩家，對收集也有執著</em></p><ul><li>只想看到自己有什麼（只想要炫耀讓朋友知道自己擁有什麼）</li><li>儲存成功的 popup 覺得很棒 💯</li><li>覺得選單很長</li><li>Filter 做得很順 💯</li><li>清空機制</li><li>同時看到自己和朋友的蒐藏</li></ul><p><em>較認真收集的玩家，遊戲時數長，會請朋友幫忙時空旅人</em></p><ul><li>想要款式小字一目瞭然（variation name），兩種 view mode 都想要顯示（可能用 hover 不明顯）</li><li>利用款式小字來 filter</li><li>英文搜尋傢俱</li><li>IPad 看的時候 grid 會跑版</li></ul><p><em>認真玩家，很常互相寄傢俱，測試過程有把認真完全試用過</em></p><ul><li>想要款式小字 （地燈 地圖等 圖片無法區分）</li><li>部分排序是錯的</li></ul><p><em>佛系玩的玩家 跟風系</em></p><ul><li>table title 想要浮起來</li></ul><p><strong>Solution</strong></p><ul><li><input type="checkbox" id="checkbox0" checked><label for="checkbox0">增加一個 filter ，三個 state 的 radio button (</label><code>all</code>, <code>owned</code>, <code>not owned</code>)</li><li><input type="checkbox" id="checkbox1" checked><label for="checkbox1">可另開蒐藏列表 =&gt; target blank</label></li><li><input type="checkbox" id="checkbox2"><label for="checkbox2"></label><s>把 grid 的 with 變 dynamic，利用 <a href="http://flexboxgrid.com/" target="_blank" rel="noopener">Flexbox Grid</a></s> 用 <code>media query</code> 修</li><li><input type="checkbox" id="checkbox3"><label for="checkbox3">實作 i18n（genList 裡面就要有個語系）</label></li><li><input type="checkbox" id="checkbox4"><label for="checkbox4">顯示款式小字</label></li></ul></li><li><p>2020/05/25 前端UI重新設計整體翻新</p></li><li><p>2020/05/26 改善多清單滾動效能問題</p><ul><li>使用<a href="https://github.com/tangbc/vue-virtual-scroll-list" target="_blank" rel="noopener">vue-virtual-scroll-list</a></li></ul></li><li><p>2020/05/29 因上述套件有bug因此全數翻新到react</p><ul><li>使用<a href="https://github.com/bvaughn/react-virtualized" target="_blank" rel="noopener">react-virtualized</a></li></ul></li><li><p>2020/06/04 加入廣告維持網域費用</p></li></ul><p><a href="https://nookstamp.com" target="_blank" rel="noopener">https://nookstamp.com</a></p><h2 id="開發小記">開發小記</h2><p>初期這款應用程式當然是跟著使用者需求進行開發，除了使用MVP思維之外，透過facebook群眾分析 與 google analytics，<br>理解使用者：</p><ul><li>年齡族群</li><li>性別比例</li><li>裝置比例</li><li>境外境內</li></ul><h3 id="初期畫面">初期畫面</h3><p><img src="01.png" alt="初期畫面"></p><h3 id="設計稿">設計稿</h3><p><img src="design.jpg" alt="設計稿"></p><p>最終討論不繼續維護的主要原因是廣告收益不佳，大部分的廣告都只支援內容農場的投放，對用web app不甚友善，製作遊戲小工具也有週期迭代，熱潮一過就很難創造營收。</p><p>但還是小紀錄一下:</p><ul><li>同時最高人次上線破100</li><li>該週使用人次破4000</li></ul><hr><p><a href="https://nookstamp.com" target="_blank" rel="noopener">https://nookstamp.com</a></p><p>2021/02/20歸檔備份</p><p><a href="http://mike-zheng.github.io/nookstamp">http://mike-zheng.github.io/nookstamp</a></p>]]></content>
      
      
      <categories>
          
          <category> 作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue 筆記 </tag>
            
            <tag> react 筆記 </tag>
            
            <tag> 小工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[筆記]vue-cli , npm install -g , yarn global add 無法更新問題 (windows系統)</title>
      <link href="/posts/2n6e146i/"/>
      <url>/posts/2n6e146i/</url>
      
        <content type="html"><![CDATA[<h1>vue-cli , npm install -g , yarn global add 無法更新問題 (windows系統)</h1><p>紀錄vue-cli想要更新到最新版本，依照<a href="https://cli.vuejs.org/guide/installation.html" target="_blank" rel="noopener">官方文件</a>卻無法成功的問題，</p><p>關鍵字</p><ul><li>vue-cli 無法更新</li><li>npm install -g 無法更新</li><li>yarn global add 無法更新</li></ul><p>使用環境為windows<br>安裝nodejs後 安裝nvm 版本控制</p><p>稍微看了系統抓藥了一下<br>主要無法進行全域刪除及更新原因 為npm路徑問題<br>尤其安裝完nvm 版本控制 導致npm有多個路徑</p><p>基礎概念<br>1.使用nvm版本控制後，安裝的npm global模塊會出現於nvm底下的各版本node路徑<br>2.npm 指令可能會跟著.npmrc 的prefix跑</p><p>因此排除錯誤步驟先前往windows環境設定</p><h2 id="錯誤排除">錯誤排除</h2><h3 id="1-windows環境設定">1. windows環境設定</h3><h4 id="查看環境設定">查看環境設定</h4><ol><li>電腦滑鼠右鍵</li><li>從內容功能表中選擇內容</li><li>按一下進階系統設定tab</li><li>按一下環境變數</li></ol><p>確保path裡有<br><code>%NVM_HOME%</code><br><code>%NVM_SYMLINK%</code></p><p><img src="img1.jpg" alt="環境變數"></p><p>環境變數存在<br><code>NVM_HOME : XXX</code><br><code>NVM_SYMLINK : XXX</code></p><p><img src="img2.jpg" alt="path"></p><p>讓node npm 指令等會前往nvm的指定路徑</p><h4 id="刪除其他會影響到npm的變數">刪除其他會影響到npm的變數</h4><p>再將<code>NODE_PATH</code>環境變數刪除</p><p>並將環境變數path內的<br><code>C:\Users\XXX\AppData\Roaming\npm</code><br><code>C:\Users\XXX\AppData\Roaming\npm\node_modules</code><br><code>C:\Users\XXX\AppData\Roaming\nvm</code></p><p>之類的移除或是你懶惰將他的順序往後挪也是可以</p><h3 id="修改-npmrc-prefix設定">修改 .npmrc prefix設定</h3><h4 id="查看目前設定">查看目前設定</h4><p>先於指令查看目前設定</p><pre><code>npm config list</code></pre><h4 id="編輯-npmrc">編輯 .npmrc</h4><p>若有設定prefix將其移除</p><p><code>C:\Users\%username%\.npmrc</code></p><p>如果有的話將 prefix=“…路徑”<br>這行刪除<br>基本上使用nvm會切node版本的話，建議是不要設定的，會導致npm指令導向某一個路徑的npm下，而讓指令失效</p><h3 id="3-重新安裝package">3. 重新安裝package</h3><pre><code>npm uninstall -g vue-clinpm install -g @vue/cli</code></pre><p>or</p><pre><code>yarn global remove vue-cliyarn global add @vue/cli</code></pre><h3 id="4-檢查">4. 檢查</h3><pre><code>vue -V</code></pre><p>此時應該會安裝最新版本了</p>]]></content>
      
      
      <categories>
          
          <category> 開發筆記 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>[開發筆記]小米手機A2 飛人fake gps with pokemonGo</title>
      <link href="/posts/63de1791/"/>
      <url>/posts/63de1791/</url>
      
        <content type="html"><![CDATA[<h1>小米手機A2 飛人fake gps with pokemonGo</h1><p>2018/11/11 雙11購買之小米A2，使用fake gps飛人工具遊玩PokemonGO修改教程。</p><p>關鍵字</p><ul><li>小米 A2</li><li>Android 8.1 Oreo</li><li>GPS JoyStick Fake GPS Location 虛擬定位 飛人</li><li>寶可夢 PokemonGO</li><li>無法取得GPS訊號 11</li><li>改機 Magisk root</li></ul><p><img src="img1.jpg" alt="android 8.1 PokemonGo with fake gps"></p><p>先前知識:</p><ul><li>刷機步驟會會有讓手機變成磚塊的風險，且步驟中會導致手機重置，請依能力先將檔案進行備份</li><li>要能夠登入PokemonGo遊玩須過SafetyNet，第三方ROM不會通過，或是改機後不隱藏root會卡在PokemonGo無法登入</li><li>舊版本的Android 5.0 進開發者設置選擇gps模擬位置程式 gps 就可以使用飛人程式(但是新手機就沒有)</li><li>若飛人後出現(無法取得GPS訊號 11) 就是新版本Android 6,7,8 以後因為系統安全條款關係，直接使用飛人程式會導致遊戲無法取得位置</li></ul><p>綜合以上，要做的事情就是改機取得系統最高權限，並用最高權限將飛人程式移至系統層級讓他能夠修改並模擬GPS位置。</p><p>大致步驟為</p><p>1.Unlock Bootloader 讓手機可以進行刷機狀態<br>2.安裝magisk manager 並以magisk root手機 取得系統權限<br>3.安裝fakegps with joystoick 並重新生成新命名gps程式<br>4.用link2SD將飛人gps及生成重命名程式移至系統層級<br>5.開啟magisk hidden pokemonGo 並隱藏其root<br>6.進開發者設置選擇gps模擬位置程式<br>7.登入並遊玩</p><h2 id="開啟開發者選項">開啟開發者選項</h2><p>1.打開設定<br>2.進入&quot;系統&quot;<br>3.點&quot;關於手機&quot;<br>4.連點&quot;版本號碼&quot; 直到開啟 “開發人員選項”</p><p><img src="img2.jpg" alt="連點 版本號碼 直到 開啟開發人員 選項"></p><p>進入&quot;系統&quot;-&gt;“開發人員選項” 後將以下開啟</p><ul><li>OEM 解鎖</li><li>USB 偵錯</li></ul><p><img src="img3.png" alt="進入 系統 -&gt; 開發人員選項"></p><h2 id="Unlock-Bootloader-Xiaomi-Mi-A2">Unlock Bootloader Xiaomi Mi A2</h2><p>刷機前要解鎖Bootloader，步驟為:</p><h3 id="1-進入fastboot-模式">1. 進入fastboot 模式</h3><p>進入fastboot 模式先關機。</p><p>關機後，按音量鍵減-後按開機鍵，五秒後放開音量鍵減-再放開開機鍵看到兔子就成功了。</p><p>若成功進入可看到畫面</p><p><img src="img4.jpg" alt="fastboot 模式"></p><h3 id="2-安裝小米驅動">2. 安裝小米驅動</h3><p>1.下載 <a href="http://xiaomi-miui-ota-3rdrom.ks3-cn-beijing.ksyun.com/rom/u265827351/3.3.525.23/miflash_unlock-en-3.3.525.23.zip" target="_blank" rel="noopener">驅動包</a> 並解壓縮<br>2.先進入fastboot模式，點擊執行&quot;miflash_unlock&quot;<br>3.點右上角的設定齒輪<br>4.點中間的Check<br>5.出現&quot;Connect your device again&quot; 將USB線重插拔<br>6.然後他將會自行安裝，結束後按關閉，驅動就安裝好了</p><p><img src="img5.jpg" alt="安裝小米驅動"></p><h3 id="3-下載安裝ADB-tool">3. 下載安裝ADB tool</h3><p>1.先下載<a href="https://drive.google.com/open?id=0B0MKgCbUM0itSUhpUklCTFpzWkE&amp;authuser=0" target="_blank" rel="noopener">ADB TOOL</a><br>2.下載後點滑鼠右鍵，用&quot;系統管理員身分執行&quot;安裝<br>3.用鍵盤打 Y / Yes 安裝 ADB and Fastboot<br>4.用鍵盤打 Y / Yes 安裝 ADB system-wide<br>5.用鍵盤打 Y / Yes 安裝 Drivers<br>6.繼續安裝 等待15秒 - finished!</p><p><img src="img6.jpg" alt="下載安裝ADB tool"></p><h3 id="4-UNLOCK-BOOTLOADER">4. UNLOCK BOOTLOADER</h3><p>1.先下載 <a href="https://mega.nz/#!MEsDRbyA!U0s_N1Swae690GxSBT2iicHiLykhIKfyo36ZzJuyEAI" target="_blank" rel="noopener">“UNLOCK BOOTLOADER XIAOMI MI A2包”</a><br>2.確認手機正與電腦連接，並處於fastboot模式<br>3.點擊&quot;unlock auto&quot;<br>4.此時手機會出現警告畫面，按兩次音量減(-)選&quot;unlock the bootloader&quot;<br>5.按手機開機鍵確定<br>6.此時手機將會自動重起兩次並解鎖成功</p><p><img src="img7.jpg" alt="執行unlock auto"></p><p><img src="img8.jpg" alt="unlock the bootloader"></p><h3 id="5-建議">5. 建議</h3><p>當unlocked bootloader後，這邊建議關機後重新進入一次fastboot mode ，然後點擊資料夾中的&quot;flash unlock critical&quot; .bat，這樣才能失敗時可以重刷firmware 。</p><blockquote><p>如果要降級ROM 也必須執行此步驟</p></blockquote><p>參考xda論壇 此篇文章 <a href="https://forum.xda-developers.com/mi-a2/how-to/guide-how-to-unlock-bootloader-xiaomi-t3831484" target="_blank" rel="noopener">Unlock Bootloader Xiaomi Mi A2</a></p><h2 id="降級ROM">降級ROM</h2><p>需要版本為V9.6.10.0.ODIMIFE 若沒遇到問題可以跳過此步驟。</p><p><a href="https://en.miui.com/thread-3544175-1-1.html" target="_blank" rel="noopener">來源</a><br>因為目前找到的root 裡面的boot.img 是針對images_V9.6.10.0.ODIMIFE_8.1 進行root，<br>因新手機版本過高刷入Magisk後會導致開機開白畫面，因此先刷降板起來</p><p>1.下載<a href="http://bigota.d.miui.com/V9.6.10.0.ODIMIFE/jasmine_global_images_V9.6.10.0.ODIMIFE_20180731.0000.00_8.1_2aeda83301.tgz" target="_blank" rel="noopener">ROM jasmine_global_images_V9.6.10.0.ODIMIFE</a><br>2.下載<a href="http://bigota.d.miui.com/tools/MiFlash2018-5-28-0.zip" target="_blank" rel="noopener">線刷工具MiFlash</a><br>3.執行&quot;XiaoMiFlash&quot;<br>4.點加載設備並選擇ROM<br>5.右下角選擇&quot;全部刪除&quot;<br>6.點擊刷機直到完成重開機</p><h2 id="Root-小米-Mi-A2-Magisk">Root 小米 Mi A2 Magisk</h2><p>1.下載<a href="https://mega.nz/#!YdlW1AyD!0mYGamSN3lGa3TPxdmcCiAoWAJ2yaCdHOU5hR4WXZco" target="_blank" rel="noopener">root 包</a><br>2.確認手機目前在fastboot模式<br>3.解壓縮並進入&quot;ROOT XIAOMI MI A2 MAGISK 16.7&quot;資料夾<br>4.執行&quot;ROOT AUTO&quot; 直到結束<br>5.執行&quot;patched_boot&quot;<br>6.若成功重新開機，基本上就root 成功了</p><p>參考xda論壇 此篇文章 <a href="https://forum.xda-developers.com/mi-a2/how-to/guide-how-to-root-xiaomi-mi-a2-magisk-t3831586" target="_blank" rel="noopener">How to Root Xiaomi Mi A2 Magisk</a></p><h2 id="檢查root-是否成功">檢查root 是否成功</h2><p>安裝<a href="https://play.google.com/store/apps/details?id=com.joeykrim.rootcheck&amp;hl=en_US" target="_blank" rel="noopener">Root Checker</a>並檢查是否通過root</p><blockquote><p>因為只是要檢查而已，確認成功就可以刪除此APP</p></blockquote><p>成功會看到畫面如</p><p><img src="img9.jpg" alt="檢查root"></p><blockquote><p><a href="https://play.google.com/store/apps/details?id=com.joeykrim.rootcheck&amp;hl=en_US" target="_blank" rel="noopener">畫面來源</a></p></blockquote><h2 id="安裝magisk">安裝magisk</h2><p><a href="https://github.com/topjohnwu/Magisk/releases" target="_blank" rel="noopener">https://github.com/topjohnwu/Magisk/releases</a></p><p>手機開機後下載<a href="https://github.com/topjohnwu/Magisk/releases/download/manager-v5.8.3/MagiskManager-v5.8.3.apk" target="_blank" rel="noopener">MagiskManager.apk</a>並安裝</p><h2 id="安裝-GPS-JoyStick-Fake-GPS-Location">安裝 GPS JoyStick Fake GPS Location</h2><ul><li>1.手機下載並安裝<a href="https://play.google.com/store/apps/details?id=com.theappninjas.gpsjoystick&amp;hl=zh_TW" target="_blank" rel="noopener">GPS JoyStick Fake GPS Location</a></li><li>2.用生成模式生成另一個app好讓其簽名不是容易被pokemonGo識別為作弊程式的名稱(例如 Gogogogogo)</li></ul><p><img src="img10.png" alt="生成模式"><br><img src="img11.png" alt="pokemonGo &amp; 飛人程式"></p><p><a href="http://gpsjoystick.theappninjas.com/faq/" target="_blank" rel="noopener">官方教程</a></p><blockquote><p>這邊要注意，生成完後不能將原本那一個應用程式刪除，不然移置系統層級後會因為API接口遺失導致APP出錯 <a href="https://www.reddit.com/r/PokemonGoSpoofing/comments/7anxzd/gps_joystick_disappears_after_system_app/" target="_blank" rel="noopener">reddit原文</a>。</p></blockquote><h2 id="用link2SD-將GPS-直至系統層級">用link2SD 將GPS 直至系統層級</h2><p>1.手機下載並安裝<a href="https://play.google.com/store/apps/details?id=com.buak.Link2SD" target="_blank" rel="noopener">link2SD</a><br>2.執行後准許root 權限後對你命名的飛人程式長按<br>3.點&quot;轉換成系統應用程式&quot;<br>4.同一步驟將&quot;GPS JoyStick Fake GPS Location&quot;移至系統層級<br>5.重新開機</p><h2 id="Magisk-Hide-PokemonGO">Magisk Hide PokemonGO</h2><p>這邊要將對pokemonGO隱藏root 讓其可以登入遊玩<br>1.手機點擊執行Magisk manager 並點擊左上角設定<br>2.點Magisk Hide 找到PokemonGo並打勾<br>3.點設置 “選隱藏Magisk manager”<br>4.重新開機</p><h2 id="GPS設置">GPS設置</h2><p>1.進入開發人員選項&gt;選取模擬位置應用程式&gt;選擇你重新命名的程式(Gogogogogo)<br>2.進入你重新命名的程式(Gogogogogo)按左上角的設定<br>3.這邊建議將&quot;禁用位置服務&quot;打開</p><p><img src="img12.png" alt="選取模擬位置應用程式"></p><h2 id="關於SafetyNet">關於SafetyNet</h2><p>pokemonGo這款遊戲會檢查系統的SafetyNet，對於改過ROM的手機或是root過的手機，就無法通過驗證就無法使用官方的 Android Pay 進行購物，基本上Google Play Service 2.3 以上就需要通過 SafetyNet。<br>目前想要過SafetyNet，一定要用原本ROM進行root，第三方ROM一定是行不通的<br>以magask root 後也一定要對pokemonGO Magisk Hide</p><p><a href="https://developer.android.com/training/safetynet/attestation" target="_blank" rel="noopener">api參考</a></p><h2 id="結果demo">結果demo</h2><p>最後打開gogogogo執行並飛到座標，再執行PokemonGO就大功告成囉</p><p><video src="demo.webm" type="video/mp4" controls width="100%" height="100%"></video></p>]]></content>
      
      
      <categories>
          
          <category> 開發筆記 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android 筆記 </tag>
            
            <tag> root刷機 </tag>
            
            <tag> Pokemon </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[筆記]遠端工作階段中斷，因為沒有終端機伺服器用戶端存取授權供這部電腦使用 無法連線問題處理</title>
      <link href="/posts/63cb7495/"/>
      <url>/posts/63cb7495/</url>
      
        <content type="html"><![CDATA[<h1>遠端工作階段中斷，因為沒有終端機伺服器用戶端存取授權供這部電腦使用</h1><h2 id="RDP無法連線問題">RDP無法連線問題</h2><p>連線出現錯誤</p><p><code>遠端工作階段中斷，因為沒有終端機伺服器用戶端存取授權供這部電腦使用</code></p><p>主因為遠端主機的遠端桌面服務是非正式版，憑證僅能使用三個月，可以直接改註冊檔把憑證刪除，重新連線後就能再用三個月。</p><p>採取步驟：</p><ol><li>打開登錄編輯程式</li></ol><ul><li><p><code>win+r</code> or 於開始列</p></li><li><p>輸入 <code>Regedit</code></p></li></ul><p><img src="01.jpg" alt="修改登錄編輯程式"></p><ol start="2"><li><p>找到路徑<br><code>HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/MSLicensing/HardwareID/</code><br>將HardwareID資料夾下的紀錄刪除</p></li><li><p>找到路徑<code>HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/MSLicensing/Store/</code><br>將Store 之下的紀錄刪除</p></li><li><p>用<code>系統管理員權限</code>重連遠端桌面(mstsc)即可(系統管理員權限很重要噢)</p></li></ol><hr><h2 id="RDP-連線後無法複製檔案問題">RDP 連線後無法複製檔案問題</h2><p>使用RDP一陣子後，無法將檔案或是文字複製進去。</p><p>可能為 Remote User rdpclip 當掉，或是Server rdpclip 當掉。<br>因為winserver的不穩定，大概可以推測為Server的<code>rdpclip.exe</code>問題。</p><p>採取步驟：</p><ol><li>於遠端Server RDP中打開工具管理員</li><li>將administrator的 rdpclip.exe 結束處理程序</li><li>找到路徑<br><code>C:\Windows\System32</code><br>用系統管理員權限打開 <code>rdpclip.exe</code></li></ol><hr>]]></content>
      
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[作品]scoreboard 球賽計分器</title>
      <link href="/posts/s11board/"/>
      <url>/posts/s11board/</url>
      
        <content type="html"><![CDATA[<h1>scoreboard 球賽計分器</h1><p>球賽計分器其實是一個被我做好幾次的project，早在大學就已經用android做過一次排球的計分器了，但這次是用vue+pwa，預期在可以在手機上做出類應用程式的spa。</p><p>這邊先科普一下：</p><p>漸進式網絡應用程式（英語：Progressive Web Apps，簡稱：PWA）是一種普通網頁或網站架構起來的網絡應用程式，但它可以以傳統應用程式或原生移動應用程式形式展示給用戶。</p><p>2017這年換了新公司，新公司的社團很活絡，也蠻常有福委舉辦的球類競賽，加上自己很愛打球，不管是羽球排球還是其他，因此手機裡面有個自製的計分器，實在是前端運動員口袋必備的武器(誤)。</p><p><img src="screenshot.png" alt="screenshot"></p><p><a href="https://github.com/Mike-Zheng/scoreboard" target="_blank" rel="noopener">https://github.com/Mike-Zheng/scoreboard</a><br><a href="https://mike-zheng.github.io/scoreboard/">https://mike-zheng.github.io/scoreboard/</a></p><p>關鍵字</p><ul><li>排球羽球籃球計分器</li><li>pwa vue</li><li><a href="https://github.com/cubiq/add-to-homescreen" target="_blank" rel="noopener">addtohomescreen.js</a></li></ul><h2 id="需求定義">需求定義</h2><p>先從需求開始定義</p><ul><li>介面簡潔</li><li>pwa做出類原生app</li><li>pwa提示</li><li>各隊分數增減</li><li>各局分數增減</li><li>總分歸零</li><li>最高支援到99分</li><li>自動轉向到大的螢幕尺寸</li><li>自動滿版mobile first</li><li>拿出去可以很炫</li></ul><h2 id="安裝步驟">安裝步驟</h2><ul><li>iphone 請用safari前往 <a href="https://mike-zheng.github.io/scoreboard/">https://mike-zheng.github.io/scoreboard/</a></li><li>出現pwa提示外掛並依提示點擊</li><li>找到加到主畫面並點擊安裝</li><li>未來打開就不會出現網址列，可以享受類app的計分效果了</li><li>(抱歉我沒有android 我沒有測試xD)</li></ul><p><img src="001.jpg" alt="出現pwa提示外掛並依提示點擊"></p><p><img src="002.jpg" alt="找到加到主畫面並點擊安裝"></p><p><a href="https://mike-zheng.github.io/scoreboard/">https://mike-zheng.github.io/scoreboard/</a></p><h2 id="demo">demo</h2><iframe src="https://mike-zheng.github.io/scoreboard" width="667px" height="375px" frameborder="0" scrolling="no"></iframe><hr>]]></content>
      
      
      <categories>
          
          <category> 作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue 筆記 </tag>
            
            <tag> pwa 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[學習筆記]CKEditor plugin 開發</title>
      <link href="/posts/754000ff/"/>
      <url>/posts/754000ff/</url>
      
        <content type="html"><![CDATA[<p>話說好一陣子沒空理部落格了，尤其是這一陣子再拚論文進度，公司也少去了一些時間。這次要記錄遇到的問題，主要是針對CKEditor進行plugin的開發，雖說是開發，其實大部分的功能都希望不是由CKEditor這邊處理，反而是廣播一個事件，讓主要的程式碼angular部分的<code>$scope</code>內進行下一步動作，因此這邊的需求只是啟動一個請求而已。</p><h1>開發</h1><p>取名為vertical，希望功能是讓<code>$scope</code>內文字顯示改成橫式/直式，因此先將載入的ckeditor裡面plugins加入vertical資料夾，在裡面放入plugin.js和images資料夾，images裡面放一個icon.png</p><hr><pre><code>ckeditor/  └plugins/     └-vertical/        ├-plugin.js        └-images/            └-icon.png</code></pre><hr><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//mike</span><span class="token comment" spellcheck="true">//plugin.js</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    CKEDITOR<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'vertical'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>        init<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>editor<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//基本樣式設定</span>            editor<span class="token punctuation">.</span>ui<span class="token punctuation">.</span><span class="token function">addButton</span><span class="token punctuation">(</span><span class="token string">'vertical'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                command<span class="token punctuation">:</span> <span class="token string">'vertical'</span><span class="token punctuation">,</span>                icon<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>path <span class="token operator">+</span> <span class="token string">'images/icon.png'</span><span class="token punctuation">,</span>                title<span class="token punctuation">:</span><span class="token string">"橫式/直式"</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//賦予按鈕功能</span>            editor<span class="token punctuation">.</span><span class="token function">addCommand</span><span class="token punctuation">(</span><span class="token string">'vertical'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                exec<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>editor<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//用javascript原生方式廣播事件</span>                    <span class="token keyword">var</span> event <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Event</span><span class="token punctuation">(</span><span class="token string">'SETCELLVERTICAL'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    document<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>                    event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>完成基本設定後再將ckeditor的設定內(預設可能在ckeditor的config.js內)加入plugins的設定。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//config.js</span><span class="token comment" spellcheck="true">//在功能列加入'vertical'，並於extraPlugins引入此第三方開發外掛</span>toolbar_full<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">'styles'</span><span class="token punctuation">,</span> items<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token operator">...</span><span class="token punctuation">,</span> <span class="token string">'vertical'</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token operator">...</span><span class="token punctuation">.</span>extraPlugins<span class="token punctuation">:</span> <span class="token string">'blbalbalba,vertical'</span><span class="token punctuation">,</span></code></pre><p>大概這樣設定後，編輯器的事件就完成了。</p><h1>結果</h1><p>CKEditor plugin 直橫切換</p><p><img src="01.gif" alt="CKEditor plugin 直橫切換 "></p>]]></content>
      
      
      <categories>
          
          <category> 程式筆記 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[學習筆記]前端框架生成pdf的方法</title>
      <link href="/posts/31c36ce2/"/>
      <url>/posts/31c36ce2/</url>
      
        <content type="html"><![CDATA[<p>這一陣子因為工作上的需求，必須將ajax到的資料轉成pdf，因此將所survey的記錄下來。<br>其實在大學期間，於資訊中心打工時，就有用到 <code>iTextSharp</code> 進行pdf檔案的輸出，但是透過後端語言及pdf模板，用此framework將資料丟進pdf內，因此需要一定格式及pdf模板的建置。<br>這次survey到的方法是將一個div透過前端的方式生成。</p><h1>pdf的js框架遇到的問題</h1><p>針對僅用前端進行pdf的輸出需求，一開始挑的是使用 <code>jsPDF</code> <a href="https://parall.ax/products/jspdf" target="_blank" rel="noopener">https://parall.ax/products/jspdf</a>進行pdf的建置，但後來發現jsPDF不支援中文。</p><p>後來找了另一款 <code>pdfmake</code> <a href="http://pdfmake.org/" target="_blank" rel="noopener">http://pdfmake.org/</a>，但還是遇到了中文的問題，中文字體必須要透過gulp方式進行打包<br>(<a href="https://github.com/bpampuch/pdfmake/wiki/Custom-Fonts---client-side" target="_blank" rel="noopener">Custom Fonts client side</a>)<br>字體轉成base64的方式後放進js當作資源，於此就會因為中文字體包size導致前端運作的效能低落，因此這也不是一個好辦法。</p><h1>使用html2canvas的解法</h1><p>在stackoverflow看到推薦使用 <code>html2canvas</code> 加上 <code>pdfmake</code> ，<br><a href="http://stackoverflow.com/questions/34049956/generate-pdf-from-html-using-pdfmake-in-angularjs/34162901#34162901" target="_blank" rel="noopener">http://stackoverflow.com/questions/34049956/generate-pdf-from-html-using-pdfmake-in-angularjs/34162901#34162901</a><br>透過先將div轉成影像再進行輸出，就能夠避免中文及css格式問題。</p><p>使用jquery可能會像以下這樣撰寫</p><script async src="//jsfiddle.net/mikzh/e16opuva/embed/js,html,css,result/dark/"></script><h1>summary</h1><p>透過html轉成圖進行中文字的建構方式雖然解決了格式及字體的問題，但是換頁部分其實還沒解決，等到我找到方法再回來進行補充。</p>]]></content>
      
      
      <categories>
          
          <category> 程式筆記 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[學習筆記]用shell script加快工作效率(OSX)</title>
      <link href="/posts/266a1e40/"/>
      <url>/posts/266a1e40/</url>
      
        <content type="html"><![CDATA[<p>先跟大家說聲新年快樂，好久沒有撰寫學習筆記了，趁這過年過節來寫點東西。<br>16年年底因為論文投稿加上一些工作上的時程壓力，沒什麼時間寫部落格，但這段期間還是玩了不少東西，以後再把筆記加進來。</p><p>這次筆記主要是因為工作上對於前端開發，每次總是要花一兩分鐘進行環境的啟動，尤其不是full time工作的我，一直要切換環境進行因應不同需求的開發，尤其是上次survey了dockerfile蒙發了想要無痛進行環境啟動的念頭。</p><p>針對這次需求，一開始挑的是使用<code>.sh</code>進行撰寫，但某些需要另外啟動其他程式的環境就要透過<code>.scpt(applescript)</code>進行啟動。</p><p>此篇是針對osx作業系統噢！<br>撰寫指令之前先了解一下<code>.sh</code><br>鳥哥的linux私房菜-學習 Shell Scripts: <a href="http://linux.vbird.org/linux_basic/0340bashshell-scripts.php" target="_blank" rel="noopener">http://linux.vbird.org/linux_basic/0340bashshell-scripts.php</a></p><h2 id="bash指令sublime-text開發">bash指令sublime text開發</h2><p>在完成效率開發環境啟動的第一步是將相關指令建置完成。<br>使用bash指令開啟資料夾進sublime text進行開發，透過這樣開啟就可以不用將資料夾拖曳來拖曳去，透過指令就可以完成開啟開發編輯器的功能。這邊是參考：<br><a href="https://gist.github.com/olivierlacan/1195304" target="_blank" rel="noopener">https://gist.github.com/olivierlacan/1195304</a><br>將環境路徑設定完畢後，就可以用底下指令快速開啟資料夾以利開發。</p><pre class=" language-bash"><code class="language-bash"><span class="token variable">$cd</span> /Develop/Folder/Path<span class="token variable">$sublime</span> <span class="token keyword">.</span></code></pre><h2 id="針對需要密碼的sudo指令運行">針對需要密碼的sudo指令運行</h2><p>因為將使用者帳號密碼明文寫進<code>.sh</code>也是挺危險，因此用變數將此重新輸入會是比較安全的做法。<br>這邊參考：<br><a href="http://stackoverflow.com/questions/3980668/how-to-get-a-password-from-a-shell-script-without-echoing?answertab=oldest#tab-top" target="_blank" rel="noopener">http://stackoverflow.com/questions/3980668/how-to-get-a-password-from-a-shell-script-without-echoing?answertab=oldest#tab-top</a></p><pre class=" language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token comment" spellcheck="true"># 讀取密碼</span><span class="token keyword">echo</span> -n Password: <span class="token function">read</span> -s password<span class="token keyword">echo</span><span class="token comment" spellcheck="true"># 執行步驟</span><span class="token keyword">echo</span> <span class="token variable">$password</span></code></pre><p>此方法就可以再啟動前重新輸入一次，並用變數記住，進而開啟其他指令。</p><h2 id="透過applescript另開啟terminal">透過applescript另開啟terminal</h2><p>因為環境開啟可能不只開啟一個terminal就能完成，還有其他工作指令，例如監聽資料夾更動、資料庫啟動等等，因此要透過另開terminal視窗進行指令，於此就要使用applescript來聯繫另外的視窗。<br>下面的範例是另開視窗：</p><pre class=" language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>osascript -e <span class="token string">'tell app "Terminal"    do script "echo hello world"end tell'</span></code></pre><p>更要人性化的操作這部分，其實可以survey一下mac內建的機器人Automator進行腳本建置。</p><h2 id="用shell-script串起工作">用shell script串起工作</h2><p>對於工作需求的前端開發要執行好多個指令，先釐清一下將列點出來</p><ol><li>執行mongoDB (需要sudo 另開視窗)</li><li>將專案資料夾用sublime開起來</li><li>執行專案內的自動化工具gulp (腳本內需要sudo 另開視窗)</li><li>開啟localhost以利開發</li></ol><p>1 mongoDB要另開視窗<br>2 3 要進入開發資料夾，並啟動gulp-watch進行監聽因此也另開資料夾<br>4 就是用預設瀏覽器開啟localhost</p><p>最後將個工作串起來<br>以下就是整個<code>.sh</code>了<br><code>.sh</code>放這邊噢，有興趣可以參考<br><a href="https://github.com/Mike-Zheng/Work-ShellScript" target="_blank" rel="noopener">https://github.com/Mike-Zheng/Work-ShellScript</a></p><pre class=" language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token keyword">echo</span> <span class="token string">"工作腳本"</span><span class="token keyword">echo</span> <span class="token string">"請輸入密碼"</span><span class="token function">read</span> -s password<span class="token comment" spellcheck="true">#先把sublime叫起床</span>osascript -e <span class="token string">'tell application "Sublime Text"    activateend tell'</span><span class="token comment" spellcheck="true">#開啟mongo資料庫</span>osascript -e <span class="token string">'tell app "Terminal"    do script "echo '</span><span class="token string">"<span class="token variable">$password</span>"</span><span class="token string">' | sudo -S sudo mongod"end tell'</span><span class="token keyword">echo</span> <span class="token string">"Start mongodb"</span><span class="token comment" spellcheck="true">#開啟sublime 並運行gulp</span>osascript -e <span class="token string">'tell app "Terminal"    do script "cd /Develop/Folder/Path &amp;&amp; sublime . &amp;&amp; echo '</span><span class="token string">"<span class="token variable">$password</span>"</span><span class="token string">'|sudo -S gulp "end tell'</span><span class="token keyword">echo</span> <span class="token string">"Start sublime &amp;&amp; develop"</span><span class="token comment" spellcheck="true">#等待開發環境運行3秒</span><span class="token function">sleep</span> 3<span class="token comment" spellcheck="true">#開啟localhost</span><span class="token function">open</span> http://127.0.0.1:3000 <span class="token operator">&amp;&amp;</span> <span class="token keyword">exit</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 程式筆記 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell script 筆記 </tag>
            
            <tag> apple script 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[學習筆記]ICAN小籤筒 使用Electron開發</title>
      <link href="/posts/2d0e0212/"/>
      <url>/posts/2d0e0212/</url>
      
        <content type="html"><![CDATA[<p>一星期一筆記計畫，因為這兩天公司事情比較少，而又開始偷閒偷學而又開始亂寫文章。<br>這一星期一開始看了很多前端相關的文章，玩了一下vuejs，不過因為過陣子公司的產品要從瀏覽器端跨足到視窗程式，趁著偷閒也來玩玩electron。</p><h2 id="ELECTRON-簡介">ELECTRON 簡介</h2><p>ELECTRON網址<br><a href="http://electron.atom.io/" target="_blank" rel="noopener">http://electron.atom.io/</a><br>如網站字面意思所示：Build cross platform desktop apps with JavaScript, HTML, and CSS，<br>簡而言之就是透過F2E 前端技術進行跨平台的應用程式開發。<br>其實開發過簡單的視窗程式的人都知道，功能部分還好，但是介面流程及使用者體驗部分，總是不會如預期的容易開發，尤其大部分的介面元件都是套死的，沒有辦法太容易進行客製化。<br>但隨著<code>html</code> 及<code>css</code>的演進，在web application端開發使用者體驗已經變成一種必須的趨勢，更好的模組化工具，更方便的預處理器使得前端ＵＸ部分變得更為重要，而視窗程式部分目前似乎沒有太流行的這一塊工具。<br>就這樣隨著chrome瀏覽器開源的內核，前端的程式碼降臨到了視窗程式，除了難以避免的臃腫外<code>[註1]</code>，前端顛覆世界語言的趨勢開始擴張了。</p><h2 id="ICAN小籤桶">ICAN小籤桶</h2><p>這次開發的是因應實驗室人太多（不包含其他屆我們這一屆有9人）meeting每次上去報的順序都喬不攏，於是開始了小籤桶的應用。<br>好拉，其實是因為以前有寫過一個籤筒<code>jQuery</code>的版本，因為朋友公司活動要一款不公正籤筒，所以剛好改一下介面就可以直上了，當然上的是公正版本啊，嗚嗚。</p><h3 id="設計圖">設計圖</h3><p>先上個設計圖。<br><img src="01.png" alt="sketch ican小籤筒設計圖"></p><p>其實每次開發相關專案都會有人問介面部分或是體驗流程部分是用哪些套件進行開發的，我只能說，哥不是交作業，其實切版或是設計核心還有工程部分幾乎都是出自我手，用的套件也很少，盡量都是用單工沒有相依性的，跑車之所以是跑車，就是因為每一輛都是限量手工。</p><p>這次設計是參考facebook message的風格，所以看起來有點熟悉是沒錯的，哈哈。</p><h3 id="開發">開發</h3><p>開發部分是用<code>jQuery</code>進行開發，沒有用其他framework，第一是東西簡單不想要複雜化，第二是想要好一點的效能(誤)。</p><p>在初始設定前因為想要統一風格因此把預設的title bar給拔掉，在一開始<code>main.js</code>上將應用程式的frame給取消，頭尾都會不見了。</p><pre class=" language-javascript"><code class="language-javascript">    mainWindow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span> frame<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>再用<code>html</code>方式建立新的header部分，當然用這種方法會遇到一些問題要克服，例如按鈕。</p><p>這邊參考<br><a href="http://stackoverflow.com/questions/31171597/atom-electron-close-the-window-with-javascript?answertab=oldest#tab-top" target="_blank" rel="noopener">http://stackoverflow.com/questions/31171597/atom-electron-close-the-window-with-javascript?answertab=oldest#tab-top</a><br>裡面的解法，將客製化按鈕重新上事件。</p><p>而title標頭bar拖曳部分，之前公司前輩有跟我分享過，是另一種有趣的寫法，寫進<code>css</code>裡面。</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.header</span> </span><span class="token punctuation">{</span>    <span class="token property">-webkit-app-region</span><span class="token punctuation">:</span> drag<span class="token punctuation">;</span> <span class="token punctuation">}</span></code></pre><p>最後打包部分也是前輩分享的<a href="https://github.com/mongodb-js/electron-installer-dmg" target="_blank" rel="noopener">https://github.com/mongodb-js/electron-installer-dmg</a><br>將開發的app轉成dmg</p><hr><h3 id="下載">下載</h3><p>雖然是跨平台版本，但是因為專案太肥了，所以我只給mac版本進行遊玩。<br><img src="03.png" alt=" ican小籤筒"><br>下載網址<br><a href="https://github.com/Mike-Zheng/ICAN_Lottery/releases" target="_blank" rel="noopener">https://github.com/Mike-Zheng/ICAN_Lottery/releases</a></p><p>最後再開發的時候，因為涉及重複抽籤及歸零重來的問題，後來長得跟設計稿有點不一樣啊！！</p><p>其實蠻好用的，應該吧，有下載來玩玩的也可以給我一點回饋啊，哈哈。</p><p><code>[註1]就是很肥，因為有瀏覽器內核在，一支程式100m跑不掉。</code></p>]]></content>
      
      
      <categories>
          
          <category> 作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery 筆記 </tag>
            
            <tag> electron 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[作品]線上youtube播放器使用angular</title>
      <link href="/posts/9d2dfbbd/"/>
      <url>/posts/9d2dfbbd/</url>
      
        <content type="html"><![CDATA[<h1>線上youtube播放器使用angular</h1><p>經過上次實驗室音響的小玩具開發後，這次要進階的往功能較詳盡的小作品邁進，一是將所學融會貫通(誤)，二則是要強化實驗室音樂播放器的使用者體驗部分。<br>透過上一篇<a href="http://mike-zheng.github.io/2016/12/01/%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-%E4%BD%BF%E7%94%A8youtube-search-api%E4%B8%B2%E6%8E%A5%E5%BB%BA%E7%AB%8B%E6%92%AD%E6%94%BE%E5%99%A8/">[學習筆記]使用youtube search api串接建立播放器</a>使用youtube其api這次要完整做一個播放器，可以進行更好的音樂體驗。</p><p>在考量大量api傳值的未來擴充性，及更好維護的模組化後，決定使用angular進行開發，因為功能也不太陽春，好好寫未來可以擴寫，尤其是這一陣子angular碰很多，更要將所學好好練一下，期中ＵＸ體驗ＵＩ調整部分，也花了不少功。</p><p>講這麼多不如先看看。</p><p><a href="https://mike-zheng.github.io/NTU-ICAN-YOUTUBE-PLAYER/">https://mike-zheng.github.io/NTU-ICAN-YOUTUBE-PLAYER/</a></p><p><img src="01.png" alt="ICAN Player"></p><h2 id="介面">介面</h2><p>這次用sketch先畫了一輪，受到前輩公司開始做產品的激勵，那自己做小玩具也要認真做啊。<br>介面代表了使用者的第一印象，先看起來好用才會繼續用下去。</p><p><img src="02.png" alt="sketch設計"></p><h2 id="前端部分">前端部分</h2><p>前端部分主要使用angular用比較偏spa的方式將功能串起來，<br>主要寫一隻concroller，directive部分主要是用開源的，<br>這邊講一下用的angular directive元件：<br><code>mgo-mousetrap</code> <code>angular-marquee</code> <code>youtube-embed</code> <code>rzModule</code></p><p>透過容易維護的綁定機制，把ＭＶＣ架構分離的很好，不用像上次將html寫進js裡面，不過也話說最近寫 <code>.jade</code>寫的很抓狂，哪有debug這麽困難的語言啊，下次一定要用ejs之類的比較像html的模組化工具啊！！</p><p>然後這次寫的factory一開始還裝會寫成service，結果沒有辦法向api戳第二次，還debug了一陣子，不過也學會了service和factory的差異，嗚嗚。</p><h2 id="UX體驗部分">UX體驗部分</h2><p>UX體驗這次花了一些力氣，包含了一些轉動小巧思，這邊簡單列幾點：</p><p>1 搜尋體驗部分<br><img src="03.gif" alt="搜尋體驗部分"></p><p>2 標題跑馬燈及選單<br><img src="04.gif" alt="標題跑馬燈及選單"></p><p>3 功能提示<br><img src="05.gif" alt="功能提示"></p><p>4 搜尋功能提示<br><img src="06.gif" alt="搜尋功能提示"></p><p>其實還有小彩蛋 例如在鍵盤打上我們實驗室的縮寫，更強的功能就會展開了，不過這邊才不要公佈給大家玩勒。<br>（其實就算發現了在非內網也不能用）</p>]]></content>
      
      
      <categories>
          
          <category> 作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Angularjs 筆記 </tag>
            
            <tag> google API </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[學習筆記]使用youtube search api串接建立播放器</title>
      <link href="/posts/b20dc59d/"/>
      <url>/posts/b20dc59d/</url>
      
        <content type="html"><![CDATA[<p>這次要記錄的部分，源自於實驗室最近開始著手撰寫論文的氛圍，因為大家開始在實驗室內日以繼夜(誤)，因此產生了維持良好環境氣氛的想法，率先著手的是強者我同學，開了一隻內網的ＡＰＩ讓其與實驗室的音響結合，透過這個ＡＰＩ與YOUTUBE VIDEO id 就可以遠端操作實驗室的音響，讓播放音樂不用teamviewer也不用走到server前播放。<br>然後過了一陣子實驗室成員就提出了要有容易使用的介面這種想法，於是前端工程師就開工了。</p><p>第一個要改善的是搜尋youtube要無痛進行，因此這篇筆記就是從這個方向進行紀錄。</p><h2 id="GOOGLE-api-申請">GOOGLE api 申請</h2><p><code>記錄日期2016-12-01</code><br>包含記錄日期就是怕之後google改版，可能有些東西就不適用了。</p><p>首先去<code>https://console.developers.google.com/apis/</code><br>新增專案，並開啟youtube data API</p><p><img src="01.png" alt="youtube data API"></p><p>然後去憑證新增一個api金鑰<br><img src="02.png" alt="新增金鑰"></p><p>新增完後點擊那個金鑰去裡面設定他的權限及限制，<br>這邊我主要是設定api授權的domian 也就是網域<br><img src="03.png" alt="設定權限"></p><p>這樣基本的google設定就完成了，<br>這邊主要的目的就是向google申請使用它們api的授權key，<br>因為超過流量是要付費的，金鑰的限制一定要設，不然會被玩壞啊。<br>再來就是著手撰寫的部分。</p><h2 id="撰寫google-搜尋">撰寫google 搜尋</h2><p>開始撰寫之前<br>有兩隻js要加載<br><code>https://apis.google.com/js/client.js?onload=onClientLoad</code><br><code>https://code.jquery.com/jquery-2.2.4.min.js</code><br>這邊主要載入jquery方便撰寫<br>及google client操作的js</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Youtube search<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://apis.google.com/js/client.js?onload<span class="token punctuation">=</span>onClientLoad<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://code.jquery.com/jquery-2.2.4.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span> </code></pre><p>這邊是基本的html</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>queryInput<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-bar<span class="token punctuation">"</span></span>  <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>searchButton<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-button<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      Go    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>youtube-channel<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>main-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//2016 mizTech NTU ESOE mikeZheng </span><span class="token keyword">var</span> musicCards <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//替按鈕綁上事件</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#searchButton"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> query <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#queryInput"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//簡單防呆一下</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>query <span class="token operator">!=</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">loadYoutubeService</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#queryInput"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>query <span class="token operator">+</span> <span class="token string">" 搜尋中.."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//向google 使用youtube服務</span><span class="token keyword">function</span> <span class="token function">loadYoutubeService</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span> <span class="token punctuation">{</span>    gapi<span class="token punctuation">.</span>client<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">'youtube'</span><span class="token punctuation">,</span> <span class="token string">'v3'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        gapi<span class="token punctuation">.</span>client<span class="token punctuation">.</span><span class="token function">setApiKey</span><span class="token punctuation">(</span><span class="token string">'AIzaSyCRwMuGP50aOvrptyXRZtveE50faOLb8R0'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">search</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//搜尋</span><span class="token keyword">function</span> <span class="token function">search</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//對於搜尋上的其他功能可以參考googleapi</span>    <span class="token comment" spellcheck="true">//https://developers.google.com/youtube/v3/docs/search/list#maxResults</span>    <span class="token keyword">var</span> request <span class="token operator">=</span> gapi<span class="token punctuation">.</span>client<span class="token punctuation">.</span>youtube<span class="token punctuation">.</span>search<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        part<span class="token punctuation">:</span> <span class="token string">'snippet'</span><span class="token punctuation">,</span>        q<span class="token punctuation">:</span> query<span class="token punctuation">,</span>        maxResults<span class="token punctuation">:</span> <span class="token number">24</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    request<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//將結果把所需部分進行擷取</span>        $<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>items<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> item<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>item<span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'playlistId'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">var</span> musicCard <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>                musicCard<span class="token punctuation">.</span>_id <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'videoId'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                musicCard<span class="token punctuation">.</span>title <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">'snippet'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                musicCard<span class="token punctuation">.</span>url <span class="token operator">=</span> <span class="token string">"https://www.youtube.com/embed/"</span> <span class="token operator">+</span> musicCard<span class="token punctuation">.</span>_id<span class="token punctuation">;</span>                musicCard<span class="token punctuation">.</span>description <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">'snippet'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'description'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                musicCards<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>musicCard<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// console.log(musicCards);</span>        <span class="token comment" spellcheck="true">//將VIEW抽出來另外生成</span>        <span class="token function">renderView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">renderView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> htmlString <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    musicCards<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>musicCard<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> card <span class="token operator">=</span> <span class="token function">createCard</span><span class="token punctuation">(</span>musicCard<span class="token punctuation">.</span>_id<span class="token punctuation">,</span> musicCard<span class="token punctuation">.</span>title<span class="token punctuation">,</span> musicCard<span class="token punctuation">.</span>description<span class="token punctuation">,</span> musicCard<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>        htmlString <span class="token operator">+</span><span class="token operator">=</span> card<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#youtube-channel'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>htmlString<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">createCard</span><span class="token punctuation">(</span>_id<span class="token punctuation">,</span> title<span class="token punctuation">,</span> description<span class="token punctuation">,</span> url<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> card <span class="token operator">=</span> <span class="token template-string"><span class="token string">`&lt;div class="card">`</span></span> <span class="token operator">+</span>        <span class="token string">'&lt;div class="info">'</span> <span class="token operator">+</span>        <span class="token string">'&lt;img src="http://img.youtube.com/vi/'</span> <span class="token operator">+</span> _id <span class="token operator">+</span> <span class="token string">'/0.jpg" alt="'</span> <span class="token operator">+</span> description <span class="token operator">+</span> <span class="token string">'">'</span> <span class="token operator">+</span>        <span class="token string">'&lt;/div>'</span> <span class="token operator">+</span>        <span class="token string">'&lt;div class="content">'</span> <span class="token operator">+</span>        <span class="token string">'&lt;a href="'</span><span class="token operator">+</span>url<span class="token operator">+</span><span class="token string">'">&lt;h2>'</span> <span class="token operator">+</span> title <span class="token operator">+</span> <span class="token string">'&lt;/h2>&lt;/a>'</span> <span class="token operator">+</span>        <span class="token string">'&lt;a href="'</span><span class="token operator">+</span>url<span class="token operator">+</span><span class="token string">'"> https://www.youtube.com/embed/'</span> <span class="token operator">+</span> _id <span class="token operator">+</span> <span class="token string">'&lt;/a>'</span> <span class="token operator">+</span>        <span class="token string">'&lt;p>'</span> <span class="token operator">+</span> description <span class="token operator">+</span> <span class="token string">'&lt;/p>'</span> <span class="token operator">+</span>        <span class="token string">'&lt;/div>'</span> <span class="token operator">+</span>        <span class="token string">'&lt;/div>'</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> card<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>我切的css 在底下jsfiddle</p><hr><h2 id="結果部分">結果部分</h2><p><a href="https://jsfiddle.net/mikzh/axemo9y8/" target="_blank" rel="noopener">jsfiddle讓你跑跑看 https://jsfiddle.net/mikzh/axemo9y8/</a></p><p>按下result 就可以執行簡單的youtube搜尋操作</p><script async src="//jsfiddle.net/mikzh/axemo9y8/29/embed/js,html,css,result/dark/"></script>]]></content>
      
      
      <categories>
          
          <category> 程式筆記 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery 筆記 </tag>
            
            <tag> google API </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[作品]Mike前端工程師筆記</title>
      <link href="/posts/d57b5f33/"/>
      <url>/posts/d57b5f33/</url>
      
        <content type="html"><![CDATA[<h1>Mike前端工程師筆記 網誌大翻修</h1><p>經過快要一個月的設計及改寫，Mike前端工程師筆記改寫總算是告一段落了(yaya 撒花)。</p><p>保留原來在github的Domain Name <code>http://mike-zheng.github.io/</code>，改善SEO及細部操作，並重新設計其外觀樣式，從原本半套版的結構翻成完全從設計切版重新開始的新界面。</p><p>從使用部落格初期，就有意思想要用自主的設計樣式裝潢外觀，就像以前使用無名小站那樣改css一樣，但總因為自主可能是設計概念不足或是切版工程浩大而退步。</p><p>趁著前一陣子抓完了寶可夢得到了空檔，手邊一堆程式擺著，心想著未來工作或是遇到的難題若無妥善記錄，未來重新遇到此難題又會卡一陣子，不如將筆記記錄下來的這種想法，將網誌重新翻修了一番。</p><p>之後也會將自己的作品一一加入，變成一個也富含作品創作的紀錄筆記。</p><p><img src="mike_web.png" alt="2016/11/23Mike前端工程師筆記截圖"></p><h3 id="hexo部落格引擎">hexo部落格引擎</h3><p>Mike前端工程師筆位於一個靜態的空間，基本上裡面任何ＣＭＳ的操做都是在我client端完成，包含撰寫及編譯， 是基於hexo的部落格引擎所構成。<code>https://hexo.io/zh-tw/</code><br>透過這一個核心引擎，自身就不用煩惱部落格文章撰寫及其自動化的功能，只要專心在寫作上就行了。</p><p>當然對於前端工程師，只是套個版用個cms引擎來玩玩這樣太不專業了，基本上介面執行及功能，都要因體驗而改善，透過重新設計版面來調整ＵＸ，再加入更多需要的元件（codehighlight 數學式等等），這才能是一個前端工程師網誌的需求。</p><p>這邊特別提一下mike前端工程師筆記是用 <code>.ejs</code> 及 <code>.scss</code> 作為模組化工具及預處理器，為什麼不挑 <code>jade</code> 或是 <code>sass</code>或是<code>less</code>呢？其實沒有絕對答案，只是因為<code>scss</code>辨識容易，容易與<code>css</code>相容，<code>ejs</code>雖然在巢狀繼承上有些問題，但容易識別開發上比較順眼僅此而已。</p><p>程式元件 <code>syntaxhighlighter</code></p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> gulp</code></pre><h3 id="設計">設計</h3><p>這次的設計用sketch先大致完成基本設計，才進行切版和程式開發，風格採用目前自家公司吉寶知識系統的materal design風格<code>http://www.jibaoviewer.com/</code>。<br>光是設計圖稿及排版工程都還沒開工，就花了一星期的時間來調整，最後問了多方意見，才在大至定稿後開工。</p><p>這邊不禁讓我想到某一次承接的案子，最後成品就是因為草草開工，導致於最後呈現的樣子自己不太滿意結果還是這樣結束了。<br>重點還是要再三達成體驗共識，並且有完善的prototype再與開工，這樣才不會到最後事與願違啊！！</p><p><img src="02.png" alt="設計稿"></p><p>這次的設計有把RWD(響應式網頁設計 Responsive Web Design)先納入考量，先考慮切換不同視窗大小的UX效果呈現及不同尺寸的樣式排列。</p><p><img src="03.gif" alt="RWD 響應式網頁設計導航列"></p><h3 id="前端撰寫">前端撰寫</h3><p>開工其實花了我蠻多時間的，不光是切版上，還有未來擴充性的撰寫及程式模組化部分，這部分當然不是外部網站呈現看得到的，但是透過一些較好的模組化分類原則，未來維護及抽出元件來使用變得更加方便，大致就先講到這邊。<br>底下分享我所使用的工具插件<br><code>jiathis 分享工具</code><br><code>Disqus 文章評論插件</code><br><code>syntaxhighlighter 程式上色工具</code><br><code>bootstrap grid 欄格系統</code><br><code>font-awesome 圖示</code><br><code>fancybox 圖片容器</code></p>]]></content>
      
      
      <categories>
          
          <category> 作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[學習筆記] MAC上進行影像資料處理 xcode 加載openCV with C++</title>
      <link href="/posts/40e45e8/"/>
      <url>/posts/40e45e8/</url>
      
        <content type="html"><![CDATA[<h1>MAC上進行影像資料處理，xcode 加載openCV with C++</h1><p>近期常在<code>xcode</code>進行影像演算法的實作，僅透過framework進行基本的ＩＯ處理，透過較完善的library進行，除了未來擴充方便外，更能容易維護而事半功倍。</p><p>為什麼使用 <code>openCV</code> ？其實也源自於大學期間有開發過一些影像的專題，那時通常都會因為<code>openCV</code>在windows上路徑版本的不同導致開發環境相關設置出現不可預期的錯誤，那樣的經驗也造就認為windows系統在做開發，是自討苦吃的開始。</p><p>這次文章的主題就是在Mac系統下，進行影像相關處理時，透過<code>openCV</code>進行ＩＯ進而開發。</p><h2 id="安裝">安裝</h2><p>安裝部分將快速提及，筆記重點在於已安裝後的加載。</p><h3 id="step1-下載">step1 下載</h3><p>[ <a href="http://opencv.org/downloads.html" target="_blank" rel="noopener">http://opencv.org/downloads.html</a> ]</p><h3 id="step2-解壓縮後進入該資料夾">step2 解壓縮後進入該資料夾</h3><p><img src="01.png" alt="iterm openCV安裝包路徑"></p><h3 id="step3-建立release資料夾，並透過cmake進行編譯openCV-library">step3 建立release資料夾，並透過cmake進行編譯openCV library</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">mkdir</span> release <span class="token function">cd</span> releasecmake -G <span class="token string">"Unix Makefiles"</span> <span class="token punctuation">..</span> <span class="token function">make</span></code></pre><h3 id="step4-make-install安裝">step4 make install安裝</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">make</span> <span class="token function">install</span></code></pre><p>而相對應的文件就會在以下路徑下<br><code>/usr/local/lib</code>(Opencv library 文件)<br><code>/usr/local/include</code>(Opencv 標頭 文件）<br><code>/usr/local/share/</code> (Opencv xml 配置)</p><h2 id="xcode-加載-openCV">xcode 加載 openCV</h2><p>完成了基本的安裝，這邊開始才是本文的重點，尤其每次專案都要重新進行加載這部分，留下比較未來更能夠快速開始。</p><h3 id="Step1">Step1</h3><p>File -&gt; New project -&gt; MacOS -&gt;Command line</p><p><img src="02.png" alt="新增專案"></p><p>將專案命名且完成存放路徑後於底下路徑進行參數添加<br>Search Paths -&gt; Build Settings-&gt;All</p><p>按下+的按鈕後將下面所對應的路徑加入如下圖<br>Header Search paths 添加<br><code>/usr/local/include</code><br>Library Search paths 添加<br><code>/usr/local/lib</code></p><p><img src="03.png" alt="添加路徑的選單"></p><h3 id="Step2">Step2</h3><p>對專案左欄選單按下右鍵，<br>點選 Add files to ”專案名稱”，</p><p><img src="04.png" alt="加入library"></p><p>此時按下鍵盤<code>cmd+shift+G</code><br>將所對應的路徑<br><code>/usr/local/lib</code> 加入<br><img src="07.png" alt="按下cmd+shift+G"></p><p>並將openＣＶ相關的資源加入</p><p><img src="06.png" alt="加入以下lib"></p><h2 id="Step3-加入圖片">Step3 加入圖片</h2><p>這邊要做的是將專案資源檔調成相對路徑，以便於開發上資源的整理<br><img src="05.png" alt="調整相對路徑"><br>preference -&gt;locations<br>將Archives改成custom</p><p>編譯後將圖片放入<br><code>Build/Products/Debug</code><br>（未編譯前該路徑將沒有Products 與 Debug資料夾）</p><h2 id="Step4-執行">Step4 執行</h2><p>將以下程式碼嘗試編譯<br>這邊用的是lena.bmp 進行測試<br>連結在這<br><a href="lena.bmp">lena.bmp</a></p><pre class=" language-cpp"><code class="language-cpp"> <span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span> <span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/opencv.hpp></span></span> <span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span> <span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span> Mat image <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">"lena.bmp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> cv<span class="token operator">::</span>Size s <span class="token operator">=</span> image<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">int</span> rows <span class="token operator">=</span> s<span class="token punctuation">.</span>height<span class="token punctuation">;</span> <span class="token keyword">int</span> cols <span class="token operator">=</span> s<span class="token punctuation">.</span>width<span class="token punctuation">;</span> <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> y<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>y<span class="token operator">&lt;</span>rows<span class="token punctuation">;</span>y<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>x<span class="token operator">&lt;</span>cols<span class="token punctuation">;</span>x<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//cout&lt;&lt;image.at&lt;Vec3b>(x,y)[0]&lt;&lt;" ";</span>         <span class="token punctuation">}</span>         <span class="token comment" spellcheck="true">//cout&lt;&lt;endl;</span>     <span class="token punctuation">}</span>     <span class="token function">namedWindow</span><span class="token punctuation">(</span><span class="token string">"lena"</span><span class="token punctuation">,</span> WINDOW_AUTOSIZE<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"lena"</span><span class="token punctuation">,</span> image<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token function">imwrite</span><span class="token punctuation">(</span> <span class="token string">"new_lena.jpg"</span><span class="token punctuation">,</span> image<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></code></pre><p><img src="08.png" alt="編譯後lena"></p><p>最後就完成基本的環境設定。</p>]]></content>
      
      
      <categories>
          
          <category> 程式筆記 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 課程筆記 </tag>
            
            <tag> openCV 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[作品]Funlay Data Mining 期末專案</title>
      <link href="/posts/20cdd269/"/>
      <url>/posts/20cdd269/</url>
      
        <content type="html"><![CDATA[<p>撰寫時間:2016/12/12<br>作品整理 by mike</p><h1>作品 Funlay Data Mining 期末專案。</h1><p>這次Data minig期末專案，主要是透過Python ，<br>基於這個從wiki英文透過Word2vec 訓練出來的model進行運算，<br><a href="https://github.com/3Top/word2vec-api" target="_blank" rel="noopener">https://github.com/3Top/word2vec-api</a></p><p>功能情境主要是將任何一個英文文章的網頁網址的輸入，後端進行爬蟲後將裡面的詞彙進行權重運算，<br>而我們事先定義了20種種類的分類標記，最後求出每一種分類與該文章文字的權重，<br>進而得知接近哪一項主題。</p><h2 id="展示">展示</h2><h3 id="照片">照片</h3><p><img src="01.png" alt="運算輸入"><br><img src="02.png" alt="結果展示"></p><h3 id="影片">影片</h3><video src="001.webm" type="video/mp4" controls width="100%" height="100%"></video>]]></content>
      
      
      <categories>
          
          <category> 作品 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>[課程筆記]DataMining 資料挖掘(1)</title>
      <link href="/posts/e15f13ac/"/>
      <url>/posts/e15f13ac/</url>
      
        <content type="html"><![CDATA[<h2 id="DataMining-資料挖掘-1">DataMining 資料挖掘(1)</h2><p>授課老師 台灣大學 工科所 張瑞益教授<br>課本 Margaret H. Dunham, Data Mining Introductory and Advanced Topics</p><h3 id="Define-data-mining">Define data mining</h3><p>在資料庫中挖掘隱含資訊或是替資料建構模型的過程<br>實際應用，需從database取data出來mining<br>研究上通常忽略database access這一步</p><h3 id="Data-mining-vs-databases">Data mining vs databases</h3><table><thead><tr><th>-</th><th>Database</th><th>Mining</th></tr></thead><tbody><tr><td>query</td><td>SQL</td><td>poor define</td></tr><tr><td>data</td><td>可操作的data in database</td><td>可能是模型 不可操作</td></tr><tr><td>output</td><td>精確 為 資料庫子集合</td><td>不精確</td></tr></tbody></table><h3 id="Data-mining-task">Data mining task</h3><p>datamining由三部分組成<br>modal 模型<br>preference 偏好的演算法<br>search 能夠找到所需結果</p><p>基本任務<br>classification<br>regression<br>prediction<br>clustering<br>summarization<br>association rules<br>sequence discovery</p><h3 id="KDD">KDD</h3><p>KDD (knowledge discovery in database)步驟</p><ul><li>selection 資料來源</li><li>preprocessing 前處理</li><li>transformation 標準化資料</li><li>data mining 挖掘資訊</li><li>interpretation 展示</li><li>potential user application 客製化使用</li></ul><p><img src="dm01-1.png" alt="kdd"></p><h3 id="Data-mining-development">Data mining development</h3><p>與資料採礦相關的主題延伸</p><p><img src="dm01-2.png" alt="Data mining development"></p><h4 id="Database">Database</h4><p>• Relational Data Model<br>• SQL<br>• Association Rule Algorithms<br>• Data Warehousing<br>• Scalability Techniques</p><h4 id="Information-Retrieval">Information Retrieval</h4><p>• Similarity Measures<br>• HierarchicalClustering<br>• IR Systems<br>• Imprecise Queries<br>• Textual Data<br>• Web Search Engines</p><h4 id="Statlstics">Statlstics</h4><p>• Bayes Theorem<br>• Regression Analysis<br>• EM Algorithm<br>• K-Means Clustering<br>• Time Series</p><h4 id="Maching-Learning">Maching Learning</h4><p>• Neural networks<br>• Decision Tree Algorithms</p><h4 id="Algorithm">Algorithm</h4><p>• Algorithm Design Techniques<br>• Algorithm Analysis<br>• Data Structures</p>]]></content>
      
      
      <categories>
          
          <category> 程式筆記 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 課程筆記 </tag>
            
            <tag> DataMining 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[學習筆記]Angularjs 簡介-語言特性</title>
      <link href="/posts/66edfc03/"/>
      <url>/posts/66edfc03/</url>
      
        <content type="html"><![CDATA[<h2 id="Angularjs-簡介">Angularjs 簡介</h2><p>Google年前力推的Angularjs，因為其設計模式及其他特有的特性，在台灣算是挺多人前仆後繼的往坑跳入，以目前來說，因為react及其他具有更高效能特性的frame work相繼出現，angular算是一個有點陌路的語言了。<br>不過其特有的特性及語言結構，還是值得往其中學習。</p><p>Javascript學習曲線:</p><p>在簡介之前，可以先瞧瞧這一張javascript的學習曲線圖</p><p><img src="http://nathanleclaire.com/images/smooth-angular-tips/js-learning-curves.jpeg" alt="學習曲線"></p><p>(來源http://nathanleclaire.com/blog/2014/01/04/5-smooth-angularjs-application-tips/)</p><ul><li><p>jquery因為其CSS般的selector和方便的語法，在學習路上算是穩定成長的。</p></li><li><p>Node 將前端語言做為後端程式的方式，上手後會是飛快成長。</p></li><li><p>Angular在進入其factory及directive之後，就會像圖上所示，搞不清處為什麼或是怎麼了。</p></li></ul><p>*因此入坑前請三思</p><hr><h3 id="AngularJS-框架介紹">AngularJS 框架介紹</h3><p>以一個語言的特性來說，angular實在是一個挺完善的語言，主要顯著的特性如下：</p><ul><li><p>CoC 慣例優先原則 (Convention Over Configuration)</p></li><li><p>MVC 架構關注點分離 (Model-View-Controller)</p></li><li><p>雙向資料綁定(Two Way Data-Binding) 特性</p></li><li><p>SPA 單頁面應用程式(單頁應用)(Single Page Application)</p></li></ul><p>這些特性或一或二存在其他語言之中，但以挑選一個開發專案framework的角度，angular算是一個推薦的框架。</p><hr><h3 id="CoC-慣例優先原則-Convention-Over-Configuration">CoC 慣例優先原則 (Convention Over Configuration)</h3><p>這個概念簡單來講就是用一些簡單的常規、慣例(convention)來取代繁雜的設定(configuration)。<br>目的就是要簡化開發者的工作，免除一些複雜的設定。</p><p>(<a href="http://sevensavants.blogspot.tw/2009/12/convention-over-configuration.html" target="_blank" rel="noopener">http://sevensavants.blogspot.tw/2009/12/convention-over-configuration.html</a>)</p><p>而angualr延伸現有的 HTML 架構，透過 宣告式語法 (Directives Syntax) 直接賦予 HTML 額外的能力</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ng-app</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>myApp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ng-controller</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>myController1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><hr><h3 id="MVC-架構關注點分離-Model-View-Controller">MVC 架構關注點分離 (Model-View-Controller)</h3><p>Angualr在這邊厲害的地方，在於 控制器 (Controllers) 與 檢視 (Views) 之間切割的非常乾淨，再搭配 模組 (module) 與 相依性注入 (Dependency Injection) 相關實作，如 工廠 (factory) 與 服務 (service)、提供者 (provider) 與 常數值 (value)<br>讓整體運行的非常有計畫。</p><p><img src="http://www.angularjstutorials.net/img/angularJs_mvc_framwork.jpg" alt="MVC 架構關注點分離"><br>(<a href="http://www.angularjstutorials.net/angularjs_mvc.html" target="_blank" rel="noopener">http://www.angularjstutorials.net/angularjs_mvc.html</a>)</p><hr><h3 id="雙向資料綁定-Two-Way-Data-Binding-特性">雙向資料綁定(Two Way Data-Binding) 特性</h3><p>AngularJS 所提供的 雙向資料繫結 (Two Way Data-Binding) 特性，view上的data和Controller之間收放得非常良好非常彈性Angular在呈現和資料中間，可以簡單建立雙向的數據綁定。</p><p>一旦建立雙向綁定，使用者輸入，會由Angular自動傳到一個變數中，再自動讀到所有綁到它的內容，更新它。效果上就是立即的資料同步。在程式碼中修改變數，也會直接反應到呈現的外觀上。<br>不僅內容可以雙向綁定，其他諸如類別、寬度、高度等等，都可以和變數與使用者的輸入，綁定起來。</p><p><img src="https://docs.angularjs.org/img/Two_Way_Data_Binding.png" alt="Two Way Data-Binding"></p><p>(<a href="https://docs.angularjs.org/guide/databinding" target="_blank" rel="noopener">https://docs.angularjs.org/guide/databinding</a>)</p><p><img src="http://www.codescratcher.com/wp-content/uploads/2015/03/Two-way-data-binding-angularjs.gif" alt="Two Way Data-Binding"></p><p>(<a href="http://www.codescratcher.com/angularjs/two-way-data-binding-angularjs/" target="_blank" rel="noopener">http://www.codescratcher.com/angularjs/two-way-data-binding-angularjs/</a>)</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://ajax.googleapis.com/ajax/libs/angularjs/1.3.14/angular.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!--1--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ng-app</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token punctuation">></span></span>            Enter Your Name :-            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Enter Name<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span> <span class="token comment" spellcheck="true">&lt;!--2--></span>             Expression Method 1 to display output:             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>              { { name } } <span class="token comment" spellcheck="true">&lt;!--3--></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>              Directive Method 2 as 'ng-bind' to display output:             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">ng-bind</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span> <span class="token comment" spellcheck="true">&lt;!--4--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><hr><h3 id="SPA-單頁面應用程式-單頁應用-Single-Page-Application">SPA 單頁面應用程式(單頁應用)(Single Page Application)</h3><p>AngularJS 裡，當瀏覽器將 HTML 與這些 AngularJS 自訂的語法解析成 DOM 物件之後，AngularJS 會直接將原生的 DOM 物件當作網頁片段的範本，然後直接以 DOM 物件 (原生的 JavaScript 物件) 進行操作，</p><p>SPA 優點</p><ul><li>1、具有桌面應用的即時性、網站的可攜性和可訪問性。</li><li>2、使用者體驗好、快，內容的改變不需要重新載入整個頁面。</li><li>3、基於上面一點，SPA相對對伺服器壓力小。</li><li>4、良好的前後端分離。SPA和RESTful架構一起使用，後端不再負責範本渲染、輸出頁面工作，web前端和各種移動終端地位對等，後端API通用化。</li><li>5、對前端人員javascript技能要求更高，促使團隊技能提升。</li></ul><p>缺點</p><ul><li>1、傳統使用ajax取得回來的內容不利於SEO。</li><li>2、初次載入耗時相對增多。</li><li>3、上一頁下一頁功能不可用，如果一定要此功能需要自行實現。</li><li>4、對開發人員技能水準、開發成本高。</li></ul><hr><h2 id="Angular-單頁面應用程式Single-Page-Application">Angular 單頁面應用程式Single Page Application</h2><p>這邊做一點angular SPA魔法的小展示</p><p><code>js/controller.js</code></p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//js/controller.js</span><span class="token keyword">var</span> neux <span class="token operator">=</span> angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">'neux'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'ui.router'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>neux<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>$stateProvider<span class="token punctuation">,</span> $urlRouterProvider<span class="token punctuation">)</span> <span class="token punctuation">{</span>        $urlRouterProvider<span class="token punctuation">.</span><span class="token function">otherwise</span><span class="token punctuation">(</span><span class="token string">'/home'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        $stateProvider     <span class="token punctuation">.</span><span class="token function">state</span><span class="token punctuation">(</span><span class="token string">'edit'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>            url<span class="token punctuation">:</span> <span class="token string">'/edit'</span><span class="token punctuation">,</span>            templateUrl<span class="token punctuation">:</span> <span class="token string">'edit.html'</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">state</span><span class="token punctuation">(</span><span class="token string">'home'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>            url<span class="token punctuation">:</span> <span class="token string">'/home'</span><span class="token punctuation">,</span>            templateUrl<span class="token punctuation">:</span> <span class="token string">'view.html'</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>neux<span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">'neuxCtrl'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>$scope<span class="token punctuation">,</span>$state<span class="token punctuation">)</span><span class="token punctuation">{</span>$scope<span class="token punctuation">.</span>tags <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">'Neux'</span><span class="token punctuation">,</span> link<span class="token punctuation">:</span> <span class="token string">"www.neux.com.tw/"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">'MikeNote'</span><span class="token punctuation">,</span> link<span class="token punctuation">:</span> <span class="token string">"http://mike-zheng.github.io/"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>$scope<span class="token punctuation">.</span>editTag <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span> <span class="token punctuation">{</span>                persons<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>text<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>           $state<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span><span class="token string">'home'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"df"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><p><code>index.html</code></p><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--index.html--></span><span class="token doctype">&lt;!doctype html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">ng-app</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>neux<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Neux - AngularJS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://ajax.googleapis.com/ajax/libs/angularjs/1.2.0-rc.2/angular.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://cdnjs.cloudflare.com/ajax/libs/angular-ui-router/0.2.8/angular-ui-router.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>js/controller.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">border</span><span class="token punctuation">:</span><span class="token hexcode">#ddd</span> solid <span class="token number">2</span>px<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">0.5</span>em<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">ng-controller</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>neuxCtrl<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Neux<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pager<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">ui-sref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>home<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Home<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">ui-sref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>edit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Edit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>well span4<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">margin-top</span><span class="token punctuation">:</span><span class="token number">20</span>px<span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">90%</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ui-view</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><hr><p><code>edit.html</code></p><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--edit.html--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>personForm<span class="token punctuation">"</span></span> <span class="token attr-name">ng-submit</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editTag()<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">ng-repeat</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tag in tags<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>tag: {{ tag.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tag.name<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>link: {{ tag.link }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tag.link<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><hr><p><code>view.html</code></p><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--view.html--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">ng-repeat</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tag in tags<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>{{ tag.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span> {{ tag.link }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></code></pre><p>在這邊使用了angular <code>ui-view</code>的效果呈現(為延伸的ng-view)，其中 <code>ui.router</code>裡的 <code>$stateProvider</code>協助整個spa做路由。<br>透過單頁應用的效果呈現，可以得知angular實在為一個不可多得MVX架構框架。<br>今天僅僅為angular 的pattern做簡介，下一次再介紹裡面與效能相關 <code>$digest</code> <code>$watch</code>，及功能上的介紹。</p><p><br><br></p><h2 id="參考資料">參考資料</h2><p><a href="http://nathanleclaire.com/blog/2014/01/04/5-smooth-angularjs-application-tips/" target="_blank" rel="noopener">http://nathanleclaire.com/blog/2014/01/04/5-smooth-angularjs-application-tips/</a><br><a href="http://sevensavants.blogspot.tw/2009/12/convention-over-configuration.html" target="_blank" rel="noopener">http://sevensavants.blogspot.tw/2009/12/convention-over-configuration.html</a><br><a href="http://www.angularjstutorials.net/angularjs_mvc.html" target="_blank" rel="noopener">http://www.angularjstutorials.net/angularjs_mvc.html</a><br><a href="https://docs.angularjs.org/guide/databinding" target="_blank" rel="noopener">https://docs.angularjs.org/guide/databinding</a><br><a href="http://www.codescratcher.com/angularjs/two-way-data-binding-angularjs/" target="_blank" rel="noopener">http://www.codescratcher.com/angularjs/two-way-data-binding-angularjs/</a><br><a href="http://abgne.tw/angularjs/angularjs-getting-stared/ngroute-ngview.html" target="_blank" rel="noopener">http://abgne.tw/angularjs/angularjs-getting-stared/ngroute-ngview.html</a><br><a href="http://blog.miniasp.com/post/2013/04/23/Front-end-Engineering-Fineart-An-Introduction-to-AngularJS.aspx" target="_blank" rel="noopener">http://blog.miniasp.com/post/2013/04/23/Front-end-Engineering-Fineart-An-Introduction-to-AngularJS.aspx</a></p>]]></content>
      
      
      <categories>
          
          <category> 程式筆記 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Angularjs 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[學習筆記]SCSS使用筆記2-工具篇 使用gulp + Bourbon 快速編譯</title>
      <link href="/posts/cdb39ba0/"/>
      <url>/posts/cdb39ba0/</url>
      
        <content type="html"><![CDATA[<h1>SASS/SCSS</h1><p>前言 <a href="http://mike-zheng.github.io/2015/12/31/%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-SCSS%E4%BD%BF%E7%94%A8%E7%AD%86%E8%A8%98/">[學習筆記]SCSS使用筆記</a></p><p>如果想了解SCSS建議先看上面這一篇，<br>這次的內容不針對Sass/Scss作介紹了，直接對工具下手。</p><h2 id="SASS-SCSS-工具">SASS/SCSS 工具</h2><p>對於CSS預處理器(CSS Preprocessor) 的工具，其實擁有不錯使用者介面的軟體其實還算不少。</p><p>這邊列一個我用過還不錯用的工具:</p><h3 id="koala-app">koala-app</h3><img width="300" alt="koala-app" src="https://www.ostraining.com/cdn/images/steve/10-csspreprocessors-09.png"><p><a href="http://koala-app.com/" target="_blank" rel="noopener">http://koala-app.com/</a> 官方網站有詳細說明</p><img width="600" alt="koala-app" src="http://koala-app.com/img/screenshot.png"><p>透過視覺化的介面，讓編譯SCSS不是難事。</p><p>這邊舉幾個我短暫使用上的優點及缺點</p><p>優點部分</p><ul><li>圖形化介面便於操作</li><li>有中文可以選擇</li><li>支援度很高 SCSS 或是LESS 都可以編譯</li><li>會自動監聽資料夾，做及時編譯</li></ul><p>而缺點部分</p><ul><li>對於程式碼內中文(包含註解)不太支援，有些必須在<code>.scss</code>內的第一行加上以下程式碼，有些情況則無解。</li></ul><pre class=" language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@charset</span> <span class="token string">"UTF-8"</span><span class="token punctuation">;</span></span></code></pre><ul><li>編譯時間稍長，可能是基於ruby的compass Framework，加上會自動監聽資料夾，編譯起來時在挺花時間。</li></ul><p>也是因為受不了上素缺點的原因，加上公司前輩的鼓勵?(師傅的指示)，我們轉用gulp進行編譯。</p><hr><h3 id="gulp自動化工具-compass">gulp自動化工具+compass</h3><p>由於最後也是受不了ruby的compass Framework編譯較大專案的<code>.scss</code>需要花上好幾秒</p><p>所以這邊稍微提到程式碼就好，不做太多說明。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> gulp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    compass   <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-compass'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'compass'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./scss/*.scss'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">compass</span><span class="token punctuation">(</span><span class="token punctuation">{</span>config_file<span class="token punctuation">:</span> <span class="token string">'./scss/config.rb'</span><span class="token punctuation">,</span>sourcemap<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>time<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      css<span class="token punctuation">:</span> <span class="token string">'./css/'</span><span class="token punctuation">,</span>      sass<span class="token punctuation">:</span> <span class="token string">'./scss/'</span><span class="token punctuation">,</span>      style<span class="token punctuation">:</span> <span class="token string">'compact'</span> <span class="token comment" spellcheck="true">//nested, expanded, compact, compressed</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./css/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'watch'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>gulp<span class="token punctuation">.</span><span class="token function">watch</span><span class="token punctuation">(</span><span class="token string">'.//scss/*.scss'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'compass'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'default'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'compass'</span><span class="token punctuation">,</span><span class="token string">'watch'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><h3 id="gulp自動化工具-Bourbon">gulp自動化工具+Bourbon</h3><p>同為讓<code>.scss</code>更容易跨平台及更容易撰寫，compass工具實在是不可或缺，裡面的多項流覽器相容自定函數，實在是無法直接排除，以下也為好用的compass舉個例子來平反上訴說它很慢很難用的形容：</p><p>像是你只要加載compass這個 framework如下面的程式碼，</p><pre class=" language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@import</span> <span class="token string">"compass/css3/text-shadow"</span><span class="token punctuation">;</span></span><span class="token selector"><span class="token class">.box</span></span><span class="token punctuation">{</span>     <span class="token atrule"><span class="token rule">@include</span> <span class="token function">box-shadow</span><span class="token punctuation">(</span>#cc0000 2px 2px 10px<span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">}</span></code></pre><p>產生出來的code就可以擁有跨瀏覽器兼容的<code>.css</code>程式語法</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.box</span></span><span class="token punctuation">{</span>  <span class="token property">-moz-box-shadow</span><span class="token punctuation">:</span> <span class="token hexcode">#cc0000</span> <span class="token number">2</span>px <span class="token number">2</span>px <span class="token number">10</span>px<span class="token punctuation">;</span>  <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> <span class="token hexcode">#cc0000</span> <span class="token number">2</span>px <span class="token number">2</span>px <span class="token number">10</span>px<span class="token punctuation">;</span>  <span class="token property">-o-box-shadow</span><span class="token punctuation">:</span> <span class="token hexcode">#cc0000</span> <span class="token number">2</span>px <span class="token number">2</span>px <span class="token number">10</span>px<span class="token punctuation">;</span>  <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token hexcode">#cc0000</span> <span class="token number">2</span>px <span class="token number">2</span>px <span class="token number">10</span>px<span class="token punctuation">;</span>  <span class="token punctuation">}</span></code></pre><p>如此方便好用怎麼能說丟就丟呢!!</p><p>還好<a href="http://sass-lang.com/" target="_blank" rel="noopener">官網</a> 右下角就有提及framework不只compass這一種，這次的工具就是由於公司前輩的帶領下，將專案整整一大包<code>.scss</code>往新的框架邁進。<br>這次我們換上 Bourbon<a href="http://bourbon.io/" target="_blank" rel="noopener">官網</a> 這套工具。</p><p>細節的部分先就到這邊暫停，我們先把編譯工具run起來</p><p><a href="https://github.com/Mike-Zheng/MikeNoteSass-Bourbon" target="_blank" rel="noopener">https://github.com/Mike-Zheng/MikeNoteSass-Bourbon</a></p><p>可以先到上面空間把編譯包下載下來</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//package.json 需要的相關工具都列在裡面了</span><span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token string">"devDependencies"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token string">"bourbon"</span><span class="token punctuation">:</span> <span class="token string">"^4.2.6"</span><span class="token punctuation">,</span>    <span class="token string">"gulp"</span><span class="token punctuation">:</span> <span class="token string">"^3.9.0"</span><span class="token punctuation">,</span>    <span class="token string">"gulp-plumber"</span><span class="token punctuation">:</span> <span class="token string">"^1.0.1"</span><span class="token punctuation">,</span>    <span class="token string">"gulp-sass"</span><span class="token punctuation">:</span> <span class="token string">"^2.1.1"</span><span class="token punctuation">,</span>    <span class="token string">"gulp-watch"</span><span class="token punctuation">:</span> <span class="token string">"^4.3.5"</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="1-下載Nodejs">1.下載Nodejs</h4><p>Nodejs官網 <a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a></p><h2 id="需要使用npm指令來安裝其他元件，裡面npm指令對於集中控管的整合包都很好用，快來下載及安裝。">需要使用<br><code>npm</code>指令來安裝其他元件，裡面<code>npm</code>指令對於集中控管的整合包都很好用，快來下載及安裝。</h2><h4 id="2-下載MikeNoteSass-Bourbon">2.下載MikeNoteSass-Bourbon</h4><p><a href="https://github.com/Mike-Zheng/MikeNoteSass-Bourbon" target="_blank" rel="noopener">https://github.com/Mike-Zheng/MikeNoteSass-Bourbon</a><br>請將內置檔案放入需要編譯的資料夾，或是開啟下載的MikeNoteSass-Bourbon-master。</p><p>用<code>Cmd</code>指令 or <code>Terminal</code>指令開啟</p><pre class=" language-css"><code class="language-css">cd <span class="token number">.....</span>/MikeNoteSass-Bourbon-master</code></pre><hr><h4 id="3-安裝全域gulp">3.安裝全域gulp</h4><p>於資料夾內繼續指令</p><p><code>npm</code>指令</p><pre class=" language-css"><code class="language-css">npm install gulp -g</code></pre><p>在這邊安裝的是自動化工具gulp</p><hr><h4 id="4-安裝package-json裡的devDependencies">4.安裝package.json裡的devDependencies</h4><p><code>npm</code>指令</p><pre class=" language-css"><code class="language-css">npm install</code></pre><h2 id="這邊需要安裝一些時間">這邊需要安裝一些時間</h2><h3 id="5-run起gulp">5.run起gulp</h3><p><code>gulp</code>指令</p><pre class=" language-css"><code class="language-css">gulp</code></pre><hr><p>到這邊為止就會發現gulp已經自動監聽資料夾內的scss資料夾，</p><p>而且編譯好後會自動放入生成的css資料夾，編譯速度也是馬上存檔馬上編譯完成的。</p><p>如此依樣畫葫蘆後，也可以將編譯工具方進自己的專案裏頭，快來試試看是否更便利呢!!</p>]]></content>
      
      
      <categories>
          
          <category> 程式筆記 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SCSS 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[學習筆記]SCSS使用筆記</title>
      <link href="/posts/101dcf70/"/>
      <url>/posts/101dcf70/</url>
      
        <content type="html"><![CDATA[<h1>SASS/SCSS</h1><h2 id="SASS-SCSS-介紹">SASS/SCSS 介紹</h2><p>這些日子在實驗室或在公司，花了很多時間學習及工作前端部分，其中調整網站前端切版時，總會希望自己現在手邊調的版型，未來可以模組化或是沿用，今天介紹的工具，就是可以用一個比較好維護的方式進行CSS的撰寫。</p><img height="48" alt="Sass" src="http://sass-lang.com/assets/img/logos/logo-b6e1ef6e.svg"><hr><h3 id="SASS-SCSS簡介">SASS/SCSS簡介</h3><p>SASS 就是 Syntactically Awesome Stylesheets 語法優越的樣式表。<br>SCSS也是SASS的一種，SCSS可以直接當做CSS寫，而SASS則不用大括號。</p><h3 id="CSS預處理器比較-Sass-vs-LESS-vs-Stylus">CSS預處理器比較 Sass vs. LESS vs. Stylus</h3><p>早些日子CSS的預處理器還有些取捨戰爭。</p><p>CSS前置處理器(CSS Preprocessor)，是一種構架於css之上的高階語言，可以通過腳本編譯生成CSS代碼，其目的是為了讓CSS開發者的工作更簡單有趣，當前已經進入了較為成熟的階段，基本上新的web開發專案大都已普遍使用。<br>現在最主要的選擇有：</p><h4 id="1-Sass背景介紹">1.Sass背景介紹</h4><p>Sass是對CSS（層疊樣式表）的語法的一種擴充，誕生於2007年，最早也是最成熟的一款CSS前置處理器語言，它可以使用變數、常量、嵌套、混入、函數等功能，可以更有效有彈性的寫出CSS。Sass最後還是會編譯出合法的CSS讓流覽器使用，也就是說它本身的語法並不太容易讓流覽器識別，因為它不是標準的CSS格式，在它的語法內部可以使用動態變數等，所以它更像一種極簡單的動態語言。<br>其實現在的Sass已經有了兩套語法規則：一個依舊是用縮進作為分隔符號來區分代碼塊的；另一套規則和CSS一樣採用了大括弧（｛｝）作為分隔符號。後一種語法規則又名SCSS，在Sass3之後的版本都支援這種語法規則。<br>注：Sass官網地址：<a href="http://sass-lang.com" target="_blank" rel="noopener">http://sass-lang.com</a></p><h4 id="2-LESS的背景介紹">2.LESS的背景介紹</h4><p>2009年開源的一個項目，受Sass的影響較大，但又使用CSS的語法，讓大部分開發者和設計師更容易上手。LESS提供了多種方式能平滑的將寫好的代碼轉化成標準的CSS代碼，在很多流行的框架和工具中已經能經常看到LESS的身影了（例如Twitter的Bootstrap框架就使用了LESS）。<br>根據WIKI百科上的介紹，其實LESS是Alexis Sellier受Sass的影響創建的一個開源項目。當時SASS採用了縮進作為分隔符號來區分代碼塊，而不是CSS中廣為使用的大括弧（｛｝）。為了讓CSS現有的用戶使用起來更佳方便，Alexis開發了LESS並提供了類似CSS的書寫功能。<br>注：LESS的官網：<a href="http://lesscss.org" target="_blank" rel="noopener">http://lesscss.org</a></p><h4 id="3-Stylus背景介紹">3.Stylus背景介紹</h4><p>Stylus，2010年產生，來自於Node.js社區，主要用來給Node項目進行CSS預處理支持，在此社區之內有一定支持者，在廣泛的意義上人氣還完全不如Sass和LESS。<br>Stylus被稱為是一種革命性的新語言，提供一個高效、動態、和使用表達方式來生成CSS，以供流覽器使用。Stylus同時支援縮進和CSS常規樣式書寫規則。<br>注：Stylus官網：<a href="http://learnboost.github.com/stylus" target="_blank" rel="noopener">http://learnboost.github.com/stylus</a></p><p>較為推崇的組合是，SASS+Compass+Twitter Bootstrap+bootstrap-sass，這一組合能夠獲得最好的底層語言SASS，最好的框架Compass，和Bootstrap提供的最強大的UI元件庫(被bootstrap-sass翻譯成SASS的風格)。<br>這邊提到發展引用於http://www.w3cplus.com/css/css-preprocessor-sass-vs-less-stylus-2.html</p><hr><p><code>.scss</code> <code>.sass</code> <code>.less</code> <code>.styl</code><br>這些都是能提供前端工程師維護CSS的工具，更詳細的功能比較可以參考下面CSS PREprocessors Compare<br><a href="https://csspre.com/compare/" target="_blank" rel="noopener">https://csspre.com/compare/</a></p><div class="if-container"><iframe src="https://csspre.com/compare/" width="800" height="450" scrolling="yes" frameborder="0"></iframe></div>### 為什麼採用Sass CSS預處理器? CSS(Cascading Style Sheet)為前端網頁撰寫，替HTML結構提供網頁外觀的風格樣式表。 透過讀取`.css`檔案可以控制HTML(XHTML)中個標籤的顯示樣式及屬性，可以更有效的控制web網站前端的外觀呈現。 就撰寫CSS本身而言，多數前端工程師都知道，它其實不是一種可以編譯、容易維護或是可以模組化的程式語言結構，你只能拿他做為網頁開發的樣式表。 因此對於前端工程師而言，對於他可以有效成現更好的網站外觀，但是下一個專案的開始又要想辦法把撰寫過的`.css`檔案中抓出你想要讓下一隻專案可以使用的部分，應該都對他又愛又恨。`.css`CSS程式碼只是一行行單純的描述，認真說寫起來難以組織及維護。<p>為了更方便進行前端網頁的開發，預處理器提供了以下需求:</p><ul><li>提供模組化已撰寫之樣式表</li><li>容易載入及維護</li><li>提供撰寫自訂樣式(類似函式語法模式)</li><li>兼容CSS的語法</li><li>縮短開發時間</li></ul><p>而Sass提供了變數(Variables)、巢狀結構(Nesting)、載入(Import)、自定樣式功能(Mixin)、樣式繼承(Extend)及變量運算(Operators)…等等<a href="http://sass-lang.com/guide" target="_blank" rel="noopener">官網</a>，提供前端工程師一個更好維護的開發環境</p><hr><h2 id="SSCSS-語法">SSCSS 語法</h2><p>前面講了這麼久，這邊開始介紹他容易維護而常使用的語法。</p><h3 id="變數-Variables">變數(Variables)</h3><p><code>.scss</code>語法</p><pre class=" language-css"><code class="language-css"><span class="token selector">$font-stack:    Helvetica, sans-serif;$primary-color: <span class="token id">#333</span>;body </span><span class="token punctuation">{</span>  <span class="token property">font</span><span class="token punctuation">:</span> <span class="token number">100%</span> $font-stack<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> $primary-color<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>轉成的<code>css</code></p><pre class=" language-css"><code class="language-css"><span class="token selector">body </span><span class="token punctuation">{</span>  <span class="token property">font</span><span class="token punctuation">:</span> <span class="token number">100%</span> Helvetica, sans-serif<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#333</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>透過變數的宣告，可很容易的將常用的語法定義進行維護動作，只要改變宣告的變數，底下撰寫使用到的語法都可以因此更動到。</p><hr><h3 id="巢狀結構-Nesting">巢狀結構(Nesting)</h3><p><code>.scss</code>語法</p><pre class=" language-css"><code class="language-css"><span class="token selector">nav </span><span class="token punctuation">{</span>  <span class="token selector">ul </span><span class="token punctuation">{</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">li </span><span class="token punctuation">{</span> <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span> <span class="token punctuation">}</span>  <span class="token selector">a </span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">6</span>px <span class="token number">12</span>px<span class="token punctuation">;</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>轉成的<code>css</code></p><pre class=" language-css"><code class="language-css"><span class="token selector">nav ul </span><span class="token punctuation">{</span>  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">nav li </span><span class="token punctuation">{</span>  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">nav a </span><span class="token punctuation">{</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">6</span>px <span class="token number">12</span>px<span class="token punctuation">;</span>  <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>用巢狀結構撰寫的好處，就是方便維護、容易看懂，用上面的例子可以清楚了解對於CSS的撰寫SCSS的巢狀結構帶來的好處。</p><hr><h3 id="載入-Import">載入(Import)</h3><p><code>.scss</code>語法</p><pre class=" language-css"><code class="language-css"><span class="token selector">// _reset<span class="token class">.scss</span>html,body,ul,ol </span><span class="token punctuation">{</span>   <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-css"><code class="language-css">// base<span class="token number">.</span>scss<span class="token atrule"><span class="token rule">@import</span> <span class="token string">'reset'</span><span class="token punctuation">;</span></span><span class="token selector">body </span><span class="token punctuation">{</span>  <span class="token property">font</span><span class="token punctuation">:</span> <span class="token number">100%</span> Helvetica, sans-serif<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#efefef</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>轉成的<code>css</code></p><pre class=" language-css"><code class="language-css"><span class="token selector">html, body, ul, ol </span><span class="token punctuation">{</span>  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">body </span><span class="token punctuation">{</span>  <span class="token property">font</span><span class="token punctuation">:</span> <span class="token number">100%</span> Helvetica, sans-serif<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#efefef</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>透過載入，可以將預先模組化的<code>.scss</code>程式碼拿來使用，此種方式可以讓前端工程師自己組織自己的武器，讓下一個專案開發時程更為壓縮。</p><hr><h3 id="自定樣式功能-Mixin">自定樣式功能(Mixin)</h3><p><code>.scss</code>語法</p><pre class=" language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@mixin</span> <span class="token function">border-radius</span><span class="token punctuation">(</span>$radius<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>  <span class="token property">-webkit-border-radius</span><span class="token punctuation">:</span> $radius<span class="token punctuation">;</span>     <span class="token property">-moz-border-radius</span><span class="token punctuation">:</span> $radius<span class="token punctuation">;</span>      <span class="token property">-ms-border-radius</span><span class="token punctuation">:</span> $radius<span class="token punctuation">;</span>          <span class="token property">border-radius</span><span class="token punctuation">:</span> $radius<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span> <span class="token atrule"><span class="token rule">@include</span> <span class="token function">border-radius</span><span class="token punctuation">(</span>10px<span class="token punctuation">)</span><span class="token punctuation">;</span></span> <span class="token punctuation">}</span></code></pre><p>轉成的<code>css</code></p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span>  <span class="token property">-webkit-border-radius</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>  <span class="token property">-moz-border-radius</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>  <span class="token property">-ms-border-radius</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>上述寫法就像是自行宣告一個函式，在透過回傳參數傳遞進行更多專案作業一樣，透過自行宣告的瀏覽器兼容語法，讓程式碼更有彈性。</p><hr><h3 id="樣式繼承-Extend">樣式繼承(Extend)</h3><p><code>.scss</code>語法</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.message</span> </span><span class="token punctuation">{</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#ccc</span><span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#333</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.success</span> </span><span class="token punctuation">{</span>  <span class="token atrule"><span class="token rule">@extend</span> .message<span class="token punctuation">;</span></span>  <span class="token property">border-color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.error</span> </span><span class="token punctuation">{</span>  <span class="token atrule"><span class="token rule">@extend</span> .message<span class="token punctuation">;</span></span>  <span class="token property">border-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.warning</span> </span><span class="token punctuation">{</span>  <span class="token atrule"><span class="token rule">@extend</span> .message<span class="token punctuation">;</span></span>  <span class="token property">border-color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>轉成的<code>css</code></p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.message</span>, <span class="token class">.success</span>, <span class="token class">.error</span>, <span class="token class">.warning</span> </span><span class="token punctuation">{</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#cccccc</span><span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#333</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.success</span> </span><span class="token punctuation">{</span>  <span class="token property">border-color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.error</span> </span><span class="token punctuation">{</span>  <span class="token property">border-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.warning</span> </span><span class="token punctuation">{</span>  <span class="token property">border-color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>透過樣式繼承，縮短程式碼撰寫及可讀性，此種方式更容易撰寫基於某種樣式的延伸物件樣式。</p><hr><h3 id="變量運算-Operators">變量運算(Operators)</h3><p><code>.scss</code>語法</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.container</span> </span><span class="token punctuation">{</span> <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token selector">article<span class="token attribute">[role="main"]</span> </span><span class="token punctuation">{</span>  <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">600</span>px / <span class="token number">960</span>px * <span class="token number">100%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">aside<span class="token attribute">[role="complimentary"]</span> </span><span class="token punctuation">{</span>  <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px / <span class="token number">960</span>px * <span class="token number">100%</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>轉成的<code>css</code></p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.container</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">article<span class="token attribute">[role="main"]</span> </span><span class="token punctuation">{</span>  <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">62.5%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">aside<span class="token attribute">[role="complimentary"]</span> </span><span class="token punctuation">{</span>  <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">31.25%</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>相信對於工程師而言，運算的程式碼應該都是基本中的基本，但是如果在裡面加入變數，這樣整個SCSS code就更有調整空間。</p><hr><p>這邊講了這麼多，是不是對於SCSS的撰寫有基本的了解了呢?<br>至於編譯工具的使用等到下一次才介紹。</p>]]></content>
      
      
      <categories>
          
          <category> 程式筆記 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SCSS 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[作品]PaperDragon database hackathon英語線上互動答題遊戲</title>
      <link href="/posts/7f3a142e/"/>
      <url>/posts/7f3a142e/</url>
      
        <content type="html"><![CDATA[<p>撰寫時間:2016/12/12<br>作品整理 by mike</p><h1>作品-PaperDragon database hackathon英語線上互動答題遊戲。</h1><p>話說database這門課希望透過英文相關教材進而延伸資料庫的應用，因此與隊友討論後決定做一款簡單的問答遊戲。</p><blockquote><p>這是一段勇氣與冒險的故事，英雄們為了那頻繁騷擾村莊的紙龍挺身而出,…</p></blockquote><p>遊戲很簡單，透過回答英文問題來進攻，進而打敗紙龍。</p><p>原本連結在實驗室的server，這次後端開發是強者我同學，因此會因為domain轉移而失效，以下是作品的備份。</p><p>老師模式<br><video src="001.webm" type="video/mp4" controls width="100%" height="100%"><br></video><br>遊戲模式<br><video src="002.webm" type="video/mp4" controls width="100%" height="100%"><br></video></p><p>照片<br><img src="01.png" alt="選擇關卡"><br><img src="02.png" alt="進行對戰"><br><img src="03.png" alt="老師模式"></p>]]></content>
      
      
      <categories>
          
          <category> 作品 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>[作品]2015FJU校慶宣傳網頁</title>
      <link href="/posts/f3d98286/"/>
      <url>/posts/f3d98286/</url>
      
        <content type="html"><![CDATA[<p>撰寫時間:2016/12/11<br>作品整理 by mike</p><h1>作品-2015FJU校慶宣傳網頁</h1><p>這是離開輔大後的第一個校慶。<br>這次接手的的案子是母校校慶的宣傳頁，看到的是熟悉的人和過往的自己。<br>網址已經失聯<code>http://active.dsa.fju.edu.tw/fjuCelebration/</code><br>備份：<br><a href="http://mike-zheng.github.io/FJU_Celebration/">http://mike-zheng.github.io/FJU_Celebration/</a><br>半出社會後，也經手很多專案的建置或是計畫的工作，然後身不由己的投入社會化的隊伍裡。<br>由自己團隊出手的案子，這是離開學生程式作品的第一遭，也感謝團隊協力輔大的學弟妹們。<br>網站支援 RWD 但是從WEB browser看比較漂亮。<br>明天活動的地圖都在網站裡面噢，希望明天大家來輔大，都有不錯的使用者體驗。</p><p><img src="01.jpg" alt="玖零年代"></p><p><img src="02.jpg" alt="玖零年代"></p><p><img src="03.jpg" alt="玖零年代"></p>]]></content>
      
      
      <categories>
          
          <category> 作品 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>[學習筆記]jQuery使用筆記(2)</title>
      <link href="/posts/44769ca7/"/>
      <url>/posts/44769ca7/</url>
      
        <content type="html"><![CDATA[<h2 id="jQuery-ajax">jQuery ajax</h2><h3 id="Json">Json</h3><p>Json格式因為其方便及自定格式一直與XML檔處於一個難以取捨的平衡位子，不過近一代的寫法因為其簡潔，漸漸趨於主流。</p><p>以下範例筆記會使用Json格式進行 ajax操作</p><p>線上解譯器 <a href="http://json.parser.online.fr" target="_blank" rel="noopener">Json Decoder</a></p><pre class=" language-javascript"><code class="language-javascript"><span class="token string">"data"</span><span class="token punctuation">:</span><span class="token punctuation">[</span>      <span class="token punctuation">{</span>      <span class="token string">"projId"</span><span class="token punctuation">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>      <span class="token string">"title"</span><span class="token punctuation">:</span><span class="token string">"計畫1"</span><span class="token punctuation">,</span>      <span class="token string">"description"</span><span class="token punctuation">:</span><span class="token string">"計畫1描述"</span><span class="token punctuation">,</span>      <span class="token string">"percentage"</span><span class="token punctuation">:</span><span class="token string">"10%"</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>      <span class="token string">"projId"</span><span class="token punctuation">:</span><span class="token string">"2"</span><span class="token punctuation">,</span>      <span class="token string">"title"</span><span class="token punctuation">:</span><span class="token string">"計畫2"</span><span class="token punctuation">,</span>      <span class="token string">"description"</span><span class="token punctuation">:</span><span class="token string">"計畫2描述"</span><span class="token punctuation">,</span>      <span class="token string">"percentage"</span><span class="token punctuation">:</span><span class="token string">"20%"</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>      <span class="token string">"projId"</span><span class="token punctuation">:</span><span class="token string">"3"</span><span class="token punctuation">,</span>      <span class="token string">"title"</span><span class="token punctuation">:</span><span class="token string">"計畫3"</span><span class="token punctuation">,</span>      <span class="token string">"description"</span><span class="token punctuation">:</span><span class="token string">"計畫3描述"</span><span class="token punctuation">,</span>      <span class="token string">"percentage"</span><span class="token punctuation">:</span><span class="token string">"30%"</span>      <span class="token punctuation">}</span>   <span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 程式筆記 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[學習筆記]jQuery使用筆記(1)</title>
      <link href="/posts/6f5bcf64/"/>
      <url>/posts/6f5bcf64/</url>
      
        <content type="html"><![CDATA[<p>基礎及常用的jQuery語法，極容易上手的事件綁定。</p><h2 id="jQuery-css設定">jQuery css設定</h2><p>設定Selector id 的css</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//隱藏物件</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#id"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'display'</span><span class="token punctuation">,</span><span class="token string">'none'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre><hr><h2 id="jQuery-class設定">jQuery class設定</h2><p>設定Selector id 的class</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//隱藏 顯示物件</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#id"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">'hidden'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#id"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">'hidden'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><h2 id="jQuery-input">jQuery input</h2><p>1.取得input內容</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> getVal<span class="token operator">=</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'input[name="firstname"]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>2.設置input內容</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'input[name="firstname"]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">'something'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><h2 id="jQuery-Radio">jQuery Radio</h2><h3 id="Radio">Radio</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>option_1<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>option<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>選項一<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>option_2<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>option<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>選項二<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>option_3<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>option<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>選項三<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>option_4<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>option<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>選項四<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><p><input id="option_1" value="1" type="radio" name="option">選項一<br><input id="option_2" value="2" type="radio" name="option">選項二<br><input id="option_3" value="3" type="radio" name="option">選項三<br><input id="option_4" value="4" type="radio" name="option">選項四</p><p>radio取值</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> d <span class="token operator">=</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'input:radio[name=option]:checked'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>radio設值</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#option_1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">"checked"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="Radio事件">Radio事件</h3><p>radio改變事件</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'input[type=radio][name=option]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">change</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token function">dosomthing</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">==</span> <span class="token string">'2'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">dosomthing</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">==</span> <span class="token string">'3'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>             <span class="token function">dosomthing</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">==</span> <span class="token string">'4'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>             <span class="token function">dosomthing</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><h2 id="快速設置UX元件">快速設置UX元件</h2><h3 id="input輸入">input輸入</h3><p>input class加入checkInteger或是checkDecimal，來限制input僅能輸入整數數字或是浮點數字。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//CheckInteger</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".checkInteger"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"keyup change"</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/\D/g</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//CheckDecimal</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".checkDecimal"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"keyup change"</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/[^0-9.]/g</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>DEMO</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>inp1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control checkInteger<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><div class="input-group"><h3>input無法輸入英文字範例</h3><input id="inp1" type="text" class="form-control checkInteger"></div><hr><script type="text/javascript">$(".checkInteger").bind("keyup change",function(){$(this).val($(this).val().replace(/\D/g,""))}),$(".checkDecimal").bind("keyup change",function(){$(this).val($(this).val().replace(/[^0-9.]/g,""))})</script>]]></content>
      
      
      <categories>
          
          <category> 程式筆記 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[學習筆記]搭建webServer使用 GulpJS </title>
      <link href="/posts/4de000f3/"/>
      <url>/posts/4de000f3/</url>
      
        <content type="html"><![CDATA[<h2 id="GulpJS-簡介">GulpJS 簡介</h2><p>這一陣子為了開發前端程式需求，開始使用了node做為javascript server 的建構。<br><a href="http://gulpjs.com/" target="_blank" rel="noopener">gulpjs</a> 為基於Nodejs 的自動化套件，主要用來處理前後端任務，選擇他的原因當然是因為他大量而方便的<a href="http://gulpjs.com/plugins/" target="_blank" rel="noopener">套件</a>，簡單幾個步驟，就可以做為網頁的開發server了。</p><h2 id="GulpJS-安裝">GulpJS 安裝</h2><h3 id="Step-1">Step 1</h3><p>安裝NodeJS 使cmd指令可以使用npm，為了使用多node的框架，趕快去官網下載，將其安裝囉。<br><a href="https://nodejs.org/" target="_blank" rel="noopener">Node</a></p><h3 id="Step-2">Step 2</h3><p>安裝完node後，也要關心環境變數是否設定完成，可以開啟terminal 或是 cmd 指令<br>輸入</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g gulp</code></pre><p>而如果出現錯誤訊息，就代表node環境相關設定沒有完成，可以重新下載安裝或設定。</p><h3 id="Step-3">Step 3</h3><p>完成簡單基本的安裝後，再來就是思考你的網站架構，架構出來後在其路徑資料夾內安裝進一步的套件。<br>這邊假設一個可能基本網頁的架構<br>如下：</p><pre><code>web├index.html├css/├scss/└js/</code></pre><h3 id="Step-4">Step 4</h3><p>為了安裝進一部的套件，用terminal 或是 cmd 指令開啟這個資料夾。</p><pre class=" language-javascript"><code class="language-javascript">cd <span class="token punctuation">.</span><span class="token punctuation">.</span>\web</code></pre><p>然後安裝 gulp node套件<br>輸入</p><pre class=" language-javascript"><code class="language-javascript">npm install gulp gulp<span class="token operator">-</span>connect <span class="token operator">--</span>save<span class="token operator">-</span>dev<span class="token comment" spellcheck="true">// 同 npm install gulp gulp-connect -D</span></code></pre><p>這算是基本的安裝</p><h3 id="Step-5">Step 5</h3><p>創建一個 gulpfile.js 檔案來啟動server<br>檔案配置會變成如下<br>如下：</p><pre><code>web├gulpfile.js├index.html├css/├scss/└js/</code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> gulp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> connect <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-connect'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'webserver'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  connect<span class="token punctuation">.</span><span class="token function">server</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    post<span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'default'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'webserver'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="Step-6">Step 6</h3><p>最後在資料夾裡面起動gulp</p><pre class=" language-javascript"><code class="language-javascript">gulp</code></pre><p>基於node的gulp server就架起來囉<br>然後瀏覽器就應該會可以看到你的首頁了</p>]]></content>
      
      
      <categories>
          
          <category> 程式筆記 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gulpjs 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
